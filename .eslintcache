[{"C:\\Users\\aamir\\mainp\\portp\\src\\index.js":"1","C:\\Users\\aamir\\mainp\\portp\\src\\App.js":"2","C:\\Users\\aamir\\mainp\\portp\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\aamir\\mainp\\portp\\src\\reportWebVitals.js":"4","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js":"5","C:\\Users\\aamir\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js":"6","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js":"7","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\store-page\\Store-page.js":"8","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js":"9","C:\\Users\\aamir\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js":"10","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js":"11","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js":"12","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.actions.js":"13","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.selectors.js":"14","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\store.js":"15","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-reducer.js":"16","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.types.js":"17","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\signon-page\\Signon.js":"18","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.actions.js":"19","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.types.js":"20","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-saga.js":"21","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.sagas.js":"22","C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\Firebase.js":"23","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.reducer.js":"24","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.reducer.js":"25","C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\firebase.js":"26","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.selectors.js":"27","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js":"28","C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signin.js":"29","C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signup.js":"30","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\list-item\\List-item.js":"31","C:\\Users\\aamir\\mainp\\portp\\src\\components\\add-items\\Add-items.js":"32","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js":"33","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js":"34","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.types.js":"35","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js":"36","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.actions.js":"37","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js":"38","C:\\Users\\aamir\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js":"39","C:\\Users\\aamir\\mainp\\portp\\src\\components\\search-box\\Search-box.js":"40","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.actions.js":"41","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.types.js":"42","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js":"43","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js":"44","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js":"45","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.utils.js":"46","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-button.js":"47","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-item.js":"48","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js":"49","C:\\Users\\aamir\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js":"50","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\category\\Category-page.js":"51","C:\\Users\\aamir\\mainp\\portp\\src\\components\\categories\\Categories.js":"52","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-page\\Product-page.js":"53","C:\\Users\\aamir\\mainp\\portp\\src\\components\\product-item\\Product-item.js":"54","C:\\Users\\aamir\\mainp\\portp\\src\\components\\item-preview\\Items-preview.js":"55","C:\\Users\\aamir\\mainp\\portp\\src\\components\\message-box\\Message-box.js":"56","C:\\Users\\aamir\\mainp\\portp\\src\\providers\\message\\message.provider.js":"57","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js":"58","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.types.js":"59","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js":"60","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.actions.js":"61","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js":"62","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.utils.js":"63","C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal.js":"64","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile.js":"65","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js":"66","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.types.js":"67","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.actions.js":"68","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js":"69","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js":"70","C:\\Users\\aamir\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js":"71","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js":"72","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js":"73","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.types.js":"74","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.actions.js":"75","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js":"76","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js":"77","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js":"78","C:\\Users\\aamir\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js":"79","C:\\Users\\aamir\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js":"80","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js":"81","C:\\Users\\aamir\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js":"82","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js":"83","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\sockets.js":"84","C:\\Users\\aamir\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js":"85","C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal-chatrooms.js":"86","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat.js":"87","C:\\Users\\aamir\\mainp\\portp\\src\\webRTC\\utils.js":"88","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-content.js":"89","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-requests.js":"90","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\video-sockets.js":"91","C:\\Users\\aamir\\mainp\\portp\\src\\components\\video-chat-log\\Video-chat-log.js":"92"},{"size":1039,"mtime":1616800969927,"results":"93","hashOfConfig":"94"},{"size":2325,"mtime":1616800968852,"results":"95","hashOfConfig":"94"},{"size":5092,"mtime":1616800970904,"results":"96","hashOfConfig":"94"},{"size":364,"mtime":1616800970852,"results":"97","hashOfConfig":"94"},{"size":4004,"mtime":1617748102095,"results":"98","hashOfConfig":"94"},{"size":1051,"mtime":1617377812983,"results":"99","hashOfConfig":"94"},{"size":3155,"mtime":1616800969492,"results":"100","hashOfConfig":"94"},{"size":835,"mtime":1616800970310,"results":"101","hashOfConfig":"94"},{"size":13783,"mtime":1617747212126,"results":"102","hashOfConfig":"94"},{"size":1798,"mtime":1616800969747,"results":"103","hashOfConfig":"94"},{"size":1233,"mtime":1616800969646,"results":"104","hashOfConfig":"94"},{"size":2365,"mtime":1616800969597,"results":"105","hashOfConfig":"94"},{"size":162,"mtime":1616800970417,"results":"106","hashOfConfig":"94"},{"size":187,"mtime":1616800970431,"results":"107","hashOfConfig":"94"},{"size":681,"mtime":1616800970772,"results":"108","hashOfConfig":"94"},{"size":873,"mtime":1616800970662,"results":"109","hashOfConfig":"94"},{"size":111,"mtime":1616800970437,"results":"110","hashOfConfig":"94"},{"size":666,"mtime":1616800970292,"results":"111","hashOfConfig":"94"},{"size":2360,"mtime":1616800970787,"results":"112","hashOfConfig":"94"},{"size":1015,"mtime":1616800970843,"results":"113","hashOfConfig":"94"},{"size":481,"mtime":1616800970671,"results":"114","hashOfConfig":"94"},{"size":4926,"mtime":1616800970822,"results":"115","hashOfConfig":"94"},{"size":3200,"mtime":1612192915902,"results":"116","hashOfConfig":"94"},{"size":1622,"mtime":1616800970797,"results":"117","hashOfConfig":"94"},{"size":368,"mtime":1616800970424,"results":"118","hashOfConfig":"94"},{"size":10967,"mtime":1617377080101,"results":"119","hashOfConfig":"94"},{"size":773,"mtime":1616800970835,"results":"120","hashOfConfig":"94"},{"size":490,"mtime":1616800969574,"results":"121","hashOfConfig":"94"},{"size":2270,"mtime":1616800969702,"results":"122","hashOfConfig":"94"},{"size":3452,"mtime":1616800969731,"results":"123","hashOfConfig":"94"},{"size":729,"mtime":1616800970129,"results":"124","hashOfConfig":"94"},{"size":5281,"mtime":1617377079242,"results":"125","hashOfConfig":"94"},{"size":4278,"mtime":1616800970158,"results":"126","hashOfConfig":"94"},{"size":1391,"mtime":1616800970707,"results":"127","hashOfConfig":"94"},{"size":641,"mtime":1616800970764,"results":"128","hashOfConfig":"94"},{"size":2690,"mtime":1616800970735,"results":"129","hashOfConfig":"94"},{"size":1518,"mtime":1616800970684,"results":"130","hashOfConfig":"94"},{"size":1122,"mtime":1616800970758,"results":"131","hashOfConfig":"94"},{"size":1476,"mtime":1616800969309,"results":"132","hashOfConfig":"94"},{"size":616,"mtime":1616800969548,"results":"133","hashOfConfig":"94"},{"size":651,"mtime":1616800970338,"results":"134","hashOfConfig":"94"},{"size":299,"mtime":1616800970396,"results":"135","hashOfConfig":"94"},{"size":704,"mtime":1616800970390,"results":"136","hashOfConfig":"94"},{"size":2071,"mtime":1616800968978,"results":"137","hashOfConfig":"94"},{"size":1205,"mtime":1616800970364,"results":"138","hashOfConfig":"94"},{"size":2042,"mtime":1616800970409,"results":"139","hashOfConfig":"94"},{"size":855,"mtime":1616800968956,"results":"140","hashOfConfig":"94"},{"size":1287,"mtime":1616800969014,"results":"141","hashOfConfig":"94"},{"size":2064,"mtime":1616800970072,"results":"142","hashOfConfig":"94"},{"size":1915,"mtime":1616800969196,"results":"143","hashOfConfig":"94"},{"size":380,"mtime":1616800969955,"results":"144","hashOfConfig":"94"},{"size":1823,"mtime":1617666616817,"results":"145","hashOfConfig":"94"},{"size":1243,"mtime":1616800970185,"results":"146","hashOfConfig":"94"},{"size":1344,"mtime":1616800969425,"results":"147","hashOfConfig":"94"},{"size":1208,"mtime":1612635918959,"results":"148","hashOfConfig":"94"},{"size":1789,"mtime":1617714658024,"results":"149","hashOfConfig":"94"},{"size":1477,"mtime":1616800970323,"results":"150","hashOfConfig":"94"},{"size":1381,"mtime":1616800970478,"results":"151","hashOfConfig":"94"},{"size":602,"mtime":1616800970540,"results":"152","hashOfConfig":"94"},{"size":2750,"mtime":1616890443573,"results":"153","hashOfConfig":"94"},{"size":1381,"mtime":1617468668526,"results":"154","hashOfConfig":"94"},{"size":342,"mtime":1616800970530,"results":"155","hashOfConfig":"94"},{"size":0,"mtime":1612807806557,"results":"156","hashOfConfig":"94"},{"size":511,"mtime":1616886943526,"results":"157","hashOfConfig":"94"},{"size":9077,"mtime":1617666617750,"results":"158","hashOfConfig":"94"},{"size":1443,"mtime":1617746853559,"results":"159","hashOfConfig":"94"},{"size":408,"mtime":1617746801232,"results":"160","hashOfConfig":"94"},{"size":812,"mtime":1617746787632,"results":"161","hashOfConfig":"94"},{"size":597,"mtime":1617746858983,"results":"162","hashOfConfig":"94"},{"size":1234,"mtime":1616800970217,"results":"163","hashOfConfig":"94"},{"size":1462,"mtime":1616800969768,"results":"164","hashOfConfig":"94"},{"size":1247,"mtime":1617377080751,"results":"165","hashOfConfig":"94"},{"size":2069,"mtime":1616800970635,"results":"166","hashOfConfig":"94"},{"size":544,"mtime":1617377080780,"results":"167","hashOfConfig":"94"},{"size":1203,"mtime":1617377080741,"results":"168","hashOfConfig":"94"},{"size":646,"mtime":1617377080773,"results":"169","hashOfConfig":"94"},{"size":2164,"mtime":1617743869957,"results":"170","hashOfConfig":"94"},{"size":3256,"mtime":1617747340018,"results":"171","hashOfConfig":"94"},{"size":1389,"mtime":1616800969340,"results":"172","hashOfConfig":"94"},{"size":2830,"mtime":1617377079504,"results":"173","hashOfConfig":"94"},{"size":1944,"mtime":1617666617120,"results":"174","hashOfConfig":"94"},{"size":2371,"mtime":1616893856833,"results":"175","hashOfConfig":"94"},{"size":3650,"mtime":1617743642934,"results":"176","hashOfConfig":"94"},{"size":2081,"mtime":1617732454914,"results":"177","hashOfConfig":"94"},{"size":1258,"mtime":1617377079435,"results":"178","hashOfConfig":"94"},{"size":537,"mtime":1616864227012,"results":"179","hashOfConfig":"94"},{"size":5974,"mtime":1617745916196,"results":"180","hashOfConfig":"94"},{"size":925,"mtime":1617402005596,"results":"181","hashOfConfig":"94"},{"size":772,"mtime":1617744100951,"results":"182","hashOfConfig":"94"},{"size":1558,"mtime":1617747307606,"results":"183","hashOfConfig":"94"},{"size":631,"mtime":1617666618370,"results":"184","hashOfConfig":"94"},{"size":1147,"mtime":1617732144244,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"s6bm0c",{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"188"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"188"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"188"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"188"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"188"},{"filePath":"371","messages":"372","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"188"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"188"},"C:\\Users\\aamir\\mainp\\portp\\src\\index.js",[],["383","384"],"C:\\Users\\aamir\\mainp\\portp\\src\\App.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\reportWebVitals.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\store-page\\Store-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js",["385","386","387","388","389","390","391"],"import React, { useEffect, useState, Suspense } from \"react\";\n\nimport {\n  enterCall,\n  sendId,\n  sendProfile\n\n} from \"../../sockets/sockets\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport {\n  selectMessagesData,\n  selectMessagesPending,\n} from \"../../redux/messages/messages.selectors\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport {\n  changeStatus,\n  fetchProfileInfoPending,\n} from \"../../redux/profile/profile.actions\";\n\nimport { selectProfileInfo, selectReceiverInfo } from \"../../redux/profile/profile.selectors\";\nimport {\n  sendMessagePending,\n  fetchMessagePending,\n  incrementLikesPending,\n} from \"../../redux/messages/messages.actions\";\nimport {\n  toggleChatModal,\n  toggleVideoBox,\n  openVideoBox,\n  toggleSucBox\n} from \"../../redux/modal/modal.actions\";\nimport { selectVideoBox, selectSucBox } from \"../../redux/modal/modal.selectors\";\nimport { Link } from \"react-router-dom\";\n\nimport VideoChat from \"../video-chat/Video-chat\";\nimport VideoChatLog from \"../../components/video-chat-log/Video-chat-log\"\nimport { setMissedCall, sendVideoData } from \"../video-chat/Video-chat-requests\"\n\nimport \"./Chat-page.scss\";\n\n\n\nconst MessageBox = React.lazy(() =>\n  import(\"../../components/message-box/Message-box\")\n);\nconst UsersSidebar = React.lazy(() =>\n  import(\"../../components/users-sidebar/Users-sidebar\")\n);\nconst WeatherBox = React.lazy(() =>\n  import(\"../../components/weather-box/Weather-box\")\n);\n\n\nfunction ChatPage({\n  currentUser,\n  sendMessagePending,\n  fetchMessagePending,\n  messages,\n  changeStatus,\n  pending,\n  incrementLikesPending,\n  getProfileInfo,\n  profileInfo,\n  videoBox,\n  toggleVideoBox,\n  openVideoBox,\n  receiverInfo,\n  successMessage,\n  toggleSucBox\n}) {\n  const [searchField, setSearchField] = useState(\"\");\n  const [messageData, setMessageData] = useState({\n    userName: \"\",\n    message: \"\",\n    messageId: \"\",\n    userId: \"\",\n    image: \"\",\n  });\n  const [imageToggle, setImageToggle] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [render, setRender] = useState(\"\");\n  const [onName, setOnName] = useState(\"\");\n  const [receivedData, setReceivedData] = useState(null);\n  const [videoData, setVideoData] = useState({\n    videoId: \"\",\n    senderId: \"\",\n    receiverId: \"\",\n    sender: \"\",\n    receiver: \"\",\n    receiverJoined: \"\",\n  });\n  const [room, setRoom] = useState(555);\n  const [toggleCallLog, setToggleCallLog] = useState(false);\n  const [timer, setTimer] = useState(0)\n  const [onConnect, setOnConnect] = useState(false);\n\n\n  useEffect(() => {\n    if(currentUser){\n    getCallerInfo(currentUser.profileId);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    if(currentUser && receiverInfo)\n    setVideoData({\n      videoId: (Math.random() * Math.random()) / Math.random(),\n      senderId: currentUser.profileId,\n      sender: currentUser.displayName,\n      receiverId: receiverInfo.recieverId,\n      receiver: receiverInfo.recieverName,\n      receiverJoined: \"no\",\n    })\n    \n    },[currentUser,receiverInfo.recieverId,setVideoData])\n\n  useEffect(() => {\n    enterCall((err, data) => {\n      if (err) return;\n\n      if (data === currentUser.profileId) {\n        getCallerInfo(currentUser.profileId);\n        console.log(\"getting incoming call data\");\n      }\n    });\n\n   \n    \n  });\n\n  useEffect(() => {\n    setRender(\"render\");\n    getProfileInfo();\n    fetchMessagePending();\n  }, [fetchMessagePending, getProfileInfo, render]);\n\n  useEffect(() => {\n    if (currentUser !== null) {\n      setMessageData({\n        userName: currentUser.displayName,\n        userId: currentUser.profileId,\n        messageId: Math.random(),\n      });\n    } else {\n      setMessageData({\n        userName: \"\",\n        userId: Math.random(),\n        messageId: Math.random(),\n      });\n    }\n  }, [currentUser, changeStatus, getProfileInfo]);\n\n  useEffect(() => {\n    if (currentUser) {\n      changeStatus(currentUser.profileId, \"online\");\n    }\n  }, [currentUser, changeStatus]);\n\n  useEffect(() => {\n    const interval = setInterval(() => fetchMessagePending(), 4000);\n    return () => clearInterval(interval);\n  }, [fetchMessagePending]);\n\n  const handleChange = (event) => {\n    setMessageData({ ...messageData, message: event.target.value });\n  };\n\n  const sendMessage = async (event) => {\n    event.preventDefault();\n    toggleShowImage();\n    sendMessagePending(messageData);\n    if (currentUser) {\n      setMessageData({\n        userName: currentUser.displayName,\n        userId: currentUser.id,\n        messageId: Math.random(),\n        message: \"\",\n        image: \"\",\n      });\n    } else {\n      setMessageData({\n        userName: nameInput,\n        userId: Math.random(),\n        messageId: Math.random(),\n        message: \"\",\n        image: \"\",\n      });\n    }\n    setImageToggle(false);\n  };\n\n  const addImageUrl = (event) => {\n    setMessageData({ ...messageData, image: event.target.value });\n  };\n\n  const onHandleSearch = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredMessages = () => {\n    return messages.filter((message) => {\n      return message.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n  };\n\n  const verifyImage = () => {\n    setMessageData({ image: \"\" });\n    setImageToggle(false);\n  };\n\n  const toggleShowImage = () => {\n    setImageToggle(!imageToggle);\n\n    const xhr = new XMLHttpRequest(); //verify url image size\n    xhr.open(\"GET\", messageData.image, true);\n    xhr.responseType = \"image/png\";\n    xhr.onreadystatechange = function () {\n      if (this.readyState === this.DONE) {\n        const size = this.response.byteLength;\n        if (size > 2242880) {\n          alert(\"use an image under 2mb\");\n        }\n      }\n    };\n    xhr.send(null);\n  };\n\n  const onNameInput = async () => {\n    await setNameInput(onName);\n    setMessageData({ ...messageData, userName: nameInput });\n  };\n\n  const getCallerInfo = async (userId) => {\n    await fetch(\"https://aamirproject-api.herokuapp.com/fetchcallinfo\", {\n\n    // await fetch(\"http://localhost:4000/fetchcallinfo\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: userId.toString(),\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setReceivedData(data);\n      });\n  };\n\n  const changeCallerStatus = () => {\n    setMissedCall()\n    .then((data) =>\n    setReceivedData(data))\n  }\n\n  const onToggleCallLog = () => {\n    setToggleCallLog(!toggleCallLog)\n\n  }\n\nconst  answerCall = async (videoId) => {\n   setRoom(videoId)\n    console.log(\"rrom\", room);\n    sendId(videoId);\n    openVideoBox();\n  };\n\n\n\n  const beginCall = async () => {\n  \n    if(receiverInfo){\n      try{\n    \n      if(videoData.receiverId === ''){\n        await setVideoData({...videoData, receiverId: receiverInfo.recieverId, receiver: receiverInfo.recieverName})\n      }\n      sendVideoData(videoData).catch(err =>console.log(\"error\",err))\n   \n      setRoom(videoData.videoId)\n       sendProfile(receiverInfo.recieverId);\n      }catch(err){\n      console.log(\"error\",err)\n    }\n   \n    }\n     \n    \n  }\n   console.log(receiverInfo)\n  const uploadInfo = () => {\n    sendVideoData(videoData);\n    setRoom(videoData.videoId)\n     sendProfile(receiverInfo.recieverId);\n  }\n\n  const putVideoData = () => {\n   \n    if(currentUser && receiverInfo){\n      setVideoData({\n        videoId: (Math.random() * Math.random()) / Math.random(),\n        senderId: currentUser.profileId,\n        sender: currentUser.displayName,\n        receiverId: receiverInfo.recieverId,\n        receiver: receiverInfo.recieverName,\n        receiverJoined: \"no\",\n      })\n    }\n  \n  };\n\n  // const incrementTimer = (status) => {\n  //   while (data === 'calling' )\n  // }\n\nlet today = new Date()\n \n  return (\n    <div>\n      <Suspense fallback={<div className=\"loader\"></div>}>\n        {/* <ChatRoom /> */}\n        <div className={videoBox ? \"chat-page-vidshow\" : \"chat-page-vidhide\"}>\n          { currentUser && receivedData ? \n          <div>\n            {successMessage?\n            <span>connection success</span>\n            : null}\n          <VideoChat\n            currentUser={currentUser}\n            profileInfo={profileInfo}\n            receivedData={receivedData}\n            videoBox={videoBox}\n            getCallerInfo={getCallerInfo}\n            videoData={videoData}\n            changeCallerStatus = {changeCallerStatus}\n            toggleVideoBox={toggleVideoBox}\n          />\n          </div>\n          : <span>sign in to video call </span>}\n    \n       \n        </div>\n        <div>\n        <Link\n          to=\"/chatroom\"\n          className=\"chat-page-roomlink\"\n         \n        >\n          Chat Rooms{\"  \"}\n        </Link>\n\n        <Link\n          onClick={toggleVideoBox}\n          className=\"chat-page-roomlink\"\n          \n        >\n          VideoChat{\"  \"}\n        </Link>\n        <Link\n         className=\"chat-page-roomlink\"\n          onClick={onToggleCallLog}\n          \n        >\n          Chat log{\"  \"}\n        </Link>\n        </div>\n        <input\n          aria-label=\"Search name\"\n          className=\"chat-page-searchbox\"\n          type=\"search\"\n          placeholder=\"search name\"\n          onChange={onHandleSearch}\n        />\n      { \n      receivedData?\n      receivedData.map( data =>\n        <div key = {data.videoid}>\n          {toggleCallLog?\n          <VideoChatLog  data = {data} openVideoBox  ={openVideoBox} beginCall = {beginCall}/>\n            :null}\n          {data.senderstatus === 'calling'\n          \n          ?<div className=\"vid-container\">\n            <span>{data.sender} is connected </span>\n          <button onClick={()=>answerCall(data.videoid)}>Join Call</button>\n          {/* <span onMouseEnter ={}>x</span> */}\n          <div className=\"vid-animation\"> {today.getHours() + \":\" + today.getMinutes()}</div>\n          </div>\n          : null}\n         </div>\n      )\n      :<span>You haven't been called yet</span>}\n    \n        <form className=\"chat-page-scroller hide-scroll\" onSubmit={sendMessage}>\n          {pending ? <div className=\"loader\"></div> : null}\n          {messages\n            ? filteredMessages().map((message) => (\n                <MessageBox\n                  messageData={message}\n                  key={message.messageid}\n                  fetchMessage={fetchMessagePending}\n                  incrementLikesPending={incrementLikesPending}\n                />\n              ))\n            : null}\n          <textarea\n            id=\"chat-page-send\"\n            value={messageData.message}\n            aria-label=\"add message\"\n            type=\"text-area\"\n            placeholder=\"Enter Message\"\n            onChange={handleChange}\n            required\n          />\n\n          <input\n            type=\"url\"\n            placeholder=\"addImageUrl\"\n            onChange={addImageUrl}\n            id=\"chat-page-image\"\n            value={messageData.image}\n            aria-label=\"Add Image URl\"\n          />\n          {currentUser ? (\n            <button id=\"chat-page-button\" type=\"submit\">\n              send\n            </button>\n          ) : (\n            <div>\n              {nameInput ? (\n                <div>\n                  <button\n                    id=\"chat-page-changename\"\n                    onClick={() => setNameInput(\"\")}\n                  >\n                    Change Name\n                  </button>\n                  <button\n                    id=\"chat-page-button\"\n                    type=\"submit\"\n                    style={{ left: \"100px\" }}\n                  >\n                    send\n                  </button>\n                </div>\n              ) : (\n                <div>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setOnName(e.target.value)}\n                    placeholder=\"enter username\"\n                    id=\"chat-page-userinput\"\n                  />\n                  <button id=\"chat-page-inputbutton\" onClick={onNameInput}>\n                    Enter Name\n                  </button>\n                </div>\n              )}\n            </div>\n            // <Link to=\"/signon\" id=\"chat-page-signin\">\n            //   {\" \"}\n            //   sign in to message and see users\n            // </Link>\n          )}\n        </form>\n\n        <UsersSidebar searchField={searchField} render={render} beginCall = {beginCall} />\n\n        <WeatherBox />\n        {imageToggle ? (\n          <img\n            src={messageData.image}\n            onError={verifyImage}\n            alt=\"verify\"\n            width=\"5\"\n            height=\"5\"\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  messages: selectMessagesData,\n  pending: selectMessagesPending,\n  profileInfo: selectProfileInfo,\n  videoBox: selectVideoBox,\n  receiverInfo: selectReceiverInfo,\n  successMessage: selectSucBox\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendMessagePending: (messageData) =>\n    dispatch(sendMessagePending(messageData)),\n  fetchMessagePending: () => dispatch(fetchMessagePending()),\n  changeStatus: (profileId, status) =>\n    dispatch(changeStatus({ profileId, status })),\n  incrementLikesPending: (messageData) =>\n    dispatch(incrementLikesPending(messageData)),\n  getProfileInfo: () => dispatch(fetchProfileInfoPending()),\n  toggleChatModal: () => dispatch(toggleChatModal()),\n  toggleVideoBox: () => dispatch(toggleVideoBox()),\n  openVideoBox : () => dispatch(openVideoBox()),\n  toggleSucBox: () => dispatch(toggleSucBox()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n\n\nexport const onVidConnet = () => {\n  toggleSucBox();\n  setTimeout(function(){  toggleSucBox()}, 3000);\n\n}","C:\\Users\\aamir\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\store.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\signon-page\\Signon.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-saga.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\Firebase.js",[],["392","393"],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\firebase.js",["394","395"],"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyCCUAnG030Pik83ErdX3DyHBqypx0qTM1A\",\n  authDomain: \"aamir-project-492ef.firebaseapp.com\",\n  projectId: \"aamir-project-492ef\",\n  storageBucket: \"aamir-project-492ef.appspot.com\",\n  messagingSenderId: \"926729331205\",\n  appId: \"1:926729331205:web:623421273d59ce346ff26c\",\n  measurementId: \"G-KGV9XG51P2\"\n};\n\n//user functions:\nexport const createUserProfileDoc = async (userData, additionalData) => {\n  // handles google and emailsignin\n  if (!userData) return;\n  const profileId = Math.random() + Math.random();\n  const profileRef = firestore.doc(`profile/${profileId}`);\n  const messageRef = firestore.doc(`messages/${profileId}`);\n  const userRef = firestore.doc(`users/${userData.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    // createes new user info\n    const { displayName, email, senderName, message } = userData;\n    const createdAt = new Date();\n\n    const status = \"\";\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n\n      await profileRef.set({\n        displayName,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n      await messageRef.set({\n        displayName,\n        createdAt,\n        senderName,\n        message,\n        profileId,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error(\"error creating new user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const updateDisplayName = async (profileId, name) => {\n  if (!profileId) return;\n  firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ displayName: name });\n      });\n    });\n};\n\nexport const updateDisplayNameforUsers = async (userId, name) => {\n  firestore.collection(\"users\").doc(userId).update({ displayName: name });\n};\n\nexport const updateStatus = async (profileId, status) => {\n  await firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ status: status });\n      });\n    });\n};\n\nexport const getProfileDoc = async (profileId) => {\n  const collectionRef = firestore.collection(\"profile\");\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      profileId: doc.data().profileId,\n      displayName: doc.data().displayName,\n      status: doc.data().status,\n    };\n  });\n};\n\nexport const getProfileName = async (profileId) => {\n  const collectionRef = firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId);\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return { displayName: doc.data().displayName };\n  });\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    // cheks to see if user is signedin\n    const unsubscribe = auth.onAuthStateChanged((userData) => {\n      //if sign in state changes\n      unsubscribe(); //unsubscribe/closes session\n      resolve(userData);\n    }, reject);\n  });\n};\n\n//messaging functions:\n\nexport const setMessageDoc = async (messageData) => {\n  const uid = Math.random() + Math.random();\n  const collectionRef = firestore.doc(`message/${uid}`);\n  const {\n    senderId,\n    message,\n    senderName,\n    recieverName,\n    recieverId,\n  } = messageData;\n  const createdAt = new Date().toDateString();\n\n  try {\n    await collectionRef.set({\n      message,\n      recieverId,\n      senderName,\n      recieverName,\n      createdAt,\n      senderId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\nexport const getRecievedMessageDoc = async (recieverId) => {\n  if (!recieverId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"recieverId\", \"==\", recieverId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      senderName: doc.data().senderName,\n      recieverName: doc.data().recieverName,\n      message: doc.data().message,\n      createdAt: doc.data().createdAt,\n      senderId: doc.data().senderId,\n \n    };\n  });\n \n\n};\n\n\nexport const getSentMessageDoc = async (senderId) => {\n  if (!senderId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"senderId\", \"==\", senderId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      message: doc.data().message,\n      createdAt: doc.data().date,\n      senderId: doc.data().senderId,\n      recieverName: doc.data().recieverName,\n      createdAt: doc.data().createdAt,\n    };\n  });\n};\n\n// shop functions:\nexport const setItemsDoc = async (itemData) => {\n  const productId = itemData.productId + Math.random();\n  const collectionRef = firestore.doc(`items/${productId}${itemData.userId}}`);\n  const {\n    price,\n    category,\n    soldBy,\n    picture,\n    description,\n    userId,\n    name,\n  } = itemData;\n\n  const createdAt = new Date();\n\n  try {\n    await collectionRef.set({\n      name,\n      price,\n      category,\n      soldBy,\n      picture,\n      description,\n      userId,\n      createdAt,\n      productId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\n// export const setItemsHistoryDoc = async ( itemData) =>{\n\n//   const collectionRef = firestore.doc(`itemshistory/${itemData.productId}${itemData.userId}}`)\n//   const name = itemData.name.toLowerCase();\n//   const {  price, category, soldBy, picture, description,userId,name} = itemData;\n//   const createdAt = new Date ();\n//   const productId = itemData.productId+Math.random()\n// try{\n//   await collectionRef.set({\n//     name, price, category, soldBy, picture, description, userId,\n//     createdAt,productId,\n//   })\n// } catch(error){\n//   console.error('error creating new listing', error.message);\n// }\n\n// }\n\nexport const getItemsDoc = async (collection) => {\n  if (!collection) return;\n  const collectionRef = firestore.collection(collection); // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getSellingItemsDoc = async (profileId) => {\n  if (!profileId) return;\n  const collectionRef = firestore\n    .collection(\"items\")\n    .where(\"userId\", \"==\", profileId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const deleteListing = async (userId, productId) => {\n  if (!userId) return;\n  const deleteRef = firestore\n    .collection(\"items\")\n    .where(\"productId\", \"==\", productId)\n    .where(\"userId\", \"==\", userId);\n  deleteRef.get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      doc.ref.delete();\n    });\n  });\n};\n\nexport const getCategoryDoc = async (collection, category) => {\n  if (!collection) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"category\", \"==\", category);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getProductDoc = async (collection, productId) => {\n  if (!productId) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"productId\", \"==\", productId);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getListedProductDoc = async (collection, soldBy) => {\n  if (!soldBy) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"soldBy\", \"==\", soldBy);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getSearchFilteredDoc = async (collection, name) => {\n  if (!name) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"name\", \">=\", name)\n    .where(\"name\", \"<=\", name + \"\\uf8ff\");\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\n//profile picture functions:\nexport const uploadImageToStorage = (profileimage, profileId) => {\n  if (!profileimage || !profileId) return;\n\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  let file = profileimage[0];\n  let uploadTask = imageRef.put(file);\n\n  if (imageRef.exists) {\n    // delete previous profile image\n    imageRef.delete();\n    return uploadImage(uploadTask);\n  }\n\n  return uploadImage(uploadTask);\n};\n\nconst uploadImage = (uploadTask) => {\n  try {\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, () => {\n      let downloadURL = uploadTask.snapshot.downloadURL;\n    });\n  } catch (error) {\n    console.error(\"error uploading new image\", error.message);\n  }\n};\n\nexport const getImage = async (profileId) => {\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  const image = await imageRef.getDownloadURL();\n  try {\n    return image;\n  } catch (error) {\n    console.error(\"error\", error.message);\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nexport const googleHandler = new firebase.auth.GoogleAuthProvider(); //handle signin prompt\ngoogleHandler.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleHandler);\n\nexport default firebase;\n","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signin.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signup.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\list-item\\List-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\add-items\\Add-items.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\search-box\\Search-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.utils.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-button.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\category\\Category-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\categories\\Categories.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-page\\Product-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\product-item\\Product-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\item-preview\\Items-preview.js",["396","397"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {addItem} from '../../redux/cart/cart.actions'\r\nimport {toggleCartHidden}  from '../../redux/cart/cart.actions'\r\nimport { fetchProductPending } from '../../redux/shop/shop.actions'\r\nimport './Item-preview.scss'\r\n\r\nfunction ItemPreview({item,fetchProductPending,history}) {\r\nconst {name,price,picture,productId} = item;\r\n\r\n    return (\r\n     \r\n         <div id='item-preview-container' >\r\n\r\n         {/* <Link to='/productpage'> */}\r\n         <div id='item-preview-overlay' >\r\n         <img id ='item-image' src ={picture} alt='item' width='100' height='100'\r\n         onClick={() => { fetchProductPending(productId); \r\n         history.push('/product') } }/>\r\n           \r\n            <span id='item-preview-name'>{name}</span>\r\n            <span id='item-preview-price'>£{price}</span>\r\n            </div>  \r\n            {/* </Link> */}\r\n           </div>    \r\n\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProductPending: (productId) => dispatch(fetchProductPending(productId)),\r\n})\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(ItemPreview));\r\n",["398","399"],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\message-box\\Message-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\providers\\message\\message.provider.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.utils.js",[],["400","401"],"C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js",["402"],"import React, { useState } from \"react\";\nimport SidebarContent from \"./Sidebar-content\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectProfileInfo } from \"../../redux/profile/profile.selectors\";\nimport { getReceiverInfo } from \"../../redux/profile/profile.actions\";\nimport { openMessageBox, openModal, openVideoBox } from \"../../redux/modal/modal.actions\";\n\nimport \"./Users-sidebar.scss\";\n\nfunction UsersSidebar({\n  getProfileInfo,\n  profilesInfo,\n  searchField,\n  currentUser,\n  getReceiverInfo,\n  openModal,\n  openMessageBox,\n  openVideoBox,\n  beginCall,\n\n}) {\n  // const [profiles] = useState(profilesInfo);\n\n  const filteredName = () => {\n    console.log(\"p\", profilesInfo);\n    return profilesInfo.filter((profile) => {\n      return profile.displayName\n        .toLowerCase()\n        .includes(searchField.toLowerCase());\n    });\n  };\n\n  return (\n    <div className=\"sidebar-container hide-scroll\">\n      <div className=\"sidebar-test-profile\">\n        <h4>Test Profiles:</h4>\n        <span id=\"sidebar-test\"> john@gmail.com password: 123456  john1@gmail.com password: 123456</span>\n      </div>\n\n      {profilesInfo\n        ? filteredName().map((data, i) => (\n            <SidebarContent\n              key={i}\n              data={data}\n              openModal={openModal}\n              currentUser={currentUser}\n              getReceiverInfo={getReceiverInfo}\n              openMessageBox={openMessageBox}\n              openVideoBox={openVideoBox}\n              beginCall={beginCall}\n             \n            />\n          ))\n        : null}\n    </div>\n  );\n}\nconst mapDispatchToProps = (dispatch) => ({\n  openModal: () => dispatch(openModal()),\n  getReceiverInfo: (profileData) => dispatch(getReceiverInfo(profileData)),\n  openMessageBox: () => dispatch(openMessageBox()),\n  openVideoBox: () => dispatch(openVideoBox()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  profilesInfo: selectProfileInfo,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSidebar);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js",["403"],"import React, { useState, useEffect } from \"react\";\nimport ChatRoomContent from \"../../components/chat-room-content/Chat-room-content\";\nimport {\n  initiateSocket,\n  disconnectSocket,\n  enterChat,\n  enterSDP,\n  sendMessage,\n  sendSDP,\n} from \"../../sockets/sockets\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./Chat-room.scss\";\n\nfunction ChatRoom({ currentUser }) {\n  const [createRoom, setCreateRoom] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n  const [room, setRoom] = useState(rooms[0]);\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [onName, setOnName] = useState(\"\");\n  const [test, setTest] = useState(null);\n\n  useEffect(() => {\n    fetchRooms();\n\n    if (currentUser) {\n      setName(currentUser.displayName);\n    } //eslint-disable-next-line\n  }, [currentUser, room, name, onName]);\n\n  useEffect(() => {\n    if (room) initiateSocket(room);\n    if (room === undefined) {\n      setRoom(rooms[0]);\n    }\n\n    enterChat((err, data) => {\n      if (err) return;\n      setChat((existingdata) => [data, ...existingdata]);\n    });\n\n    enterSDP((err, data) => {\n      if (err) return;\n      setTest(data);\n    });\n    return () => {\n      disconnectSocket();\n    };\n  }, [rooms, room, test]);\n\n  const fetchRooms = () => {\n    fetch(\"https://aamirproject-api.herokuapp.com/fetchrooms\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setRooms(data);\n        if (room === undefined) {\n          setRoom(rooms[0]);\n        }\n      });\n  };\n  console.log(test);\n\n  const addName = () => {\n    setName(onName);\n  };\n\n  const addRoom = async () => {\n    if (createRoom) {\n      await sendRoom();\n      await fetchRooms();\n      await setCreateRoom(\"\");\n      setTimeout(function () {\n        window.location.reload();\n      }, 1000);\n    }\n  };\n  const sendRoom = async () => {\n    fetch(\"https://aamirproject-api.herokuapp.com/addroom\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        room: createRoom,\n      }),\n    });\n    fetchRooms();\n    setChatHistory(chat);\n    setChat([...chat, chatHistory]);\n  };\n\n  const handleInput = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const getRoomInput = (event) => {\n    setCreateRoom(event.target.value);\n  };\n\n  return (\n    <div className=\"chatroom-container\">\n      <Link to=\"chatapp\" id=\"chatroom-link\">\n        ChatApp\n      </Link>\n      {!name ? (\n        <div id=\"chatroom-input\">\n          <input\n            type=\"text\"\n            onChange={(e) => setOnName(e.target.value)}\n            placeholder=\"enter username\"\n          />\n          <button onClick={addName}>add name</button>\n        </div>\n      ) : (\n        <div>\n         \n          <span>room: {room}</span>\n          <ChatRoomContent\n            rooms={rooms}\n            chat={chat}\n            addRoom={addRoom}\n            getRoomInput={getRoomInput}\n            handleInput={handleInput}\n            message={name + \":   \" + message}\n            setRoom={setRoom}\n            room={room}\n            sendMessage={sendMessage}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(ChatRoom);\n","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\sockets.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal-chatrooms.js",[],["404","405"],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat.js",["406","407","408","409","410","411","412","413","414","415","416"],"import React, { useRef, useState, useEffect } from \"react\";\nimport VideoChatContent from \"./Video-chat-content\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  sendVideoData,\n  getCallerInfo,\n  fetchcallinfo,\n  setMissedCall\n} from \"./Video-chat-requests\";\nimport {\n  initiateSocket,\n  enterCall,\n  sendProfile,\n  enterSDP,\n  sendSDP,\n  enterCand,\n  sendCand,\n  sendId,\n  checkJoined,\n} from \"../../sockets/sockets\";\n\nimport { initiateVidSocket } from \"../../sockets/video-sockets\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectReceiverInfo } from \"../../redux/profile/profile.selectors\";\n\n\n\nclass VideoChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentCleanup = this.componentCleanup.bind(this);\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n    this.room = 555;\n    this.sender = false;\n    this.videoData = {\n      videoId: \"\",\n      senderId: \"\",\n      receiverId: \"\",\n      sender: \"\",\n      receiver: \"\",\n      receiverJoined: \"\",\n    };\n\n    this.onCall = \"\";\n    this.remoteCandidate = [];\n  }\n\n  componentCleanup() { // this will hold the cleanup code\n  \n    sendProfile(this.props.videoData.receiverId)  \n    setMissedCall(this.props.videoData.videoId)\n}\n  componentDidMount = () => {\n    const {\n      currentUser,\n      receiverInfo,\n      receivedData,\n      getCallerInfo,\n    } = this.props;\n\n\n    window.addEventListener('beforeunload', this.componentCleanup);\n    getCallerInfo(currentUser.profileId);\n\n    if (this.room) initiateSocket(this.room);\n\n\n    checkJoined((err, data) => {\n      if (err) return;\n      console.log(\"data\", data);\n      console.log(this.props.videoData.videoId);\n      if (data == this.props.videoData.videoId) {\n        this.makeOffer();\n      }\n    });\n\n    enterSDP((err, data) => {\n      if (err) return;\n      this.pc.setRemoteDescription(new RTCSessionDescription(data));\n\n      // if(this.sender){\n      //     sendCand(this.state.remoteCandidate,this.state.videoData.videoId)\n      // }\n\n      if (this.sender === false) {\n        this.createAnswer();\n      }\n    });\n\n    enterCand((err, data) => {\n      if (err) return;\n      console.log(\"From Peer... \", JSON.stringify(data));\n      this.candidates = [...this.candidates, data];\n      this.pc.addIceCandidate(new RTCIceCandidate(data));\n    });\n\n    const config = {\n      iceServers: [\n        // {\n        //   urls: 'stun:[STUN_IP]:[PORT]',\n        //   'credentials': '[YOR CREDENTIALS]',\n        //   'username': '[USERNAME]'\n        // },\n        {\n          urls: \"stun:stun.l.google.com:19302\",\n        },\n      ],\n    };\n\n    this.pc = new RTCPeerConnection(config);\n\n    this.pc.onicecandidate = (e) => {\n      if (e.candidate) {\n        sendCand(e.candidate);\n        this.setState({ remoteCandidate: e.candidate });\n      }\n    };\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    this.pc.onaddstream = (e) => {\n      this.remoteVideoref.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      audio: false,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n    };\n    const streamSuccess = (stream) => {\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.pc.addStream(stream);\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(streamSuccess)\n      .catch((e) => {\n        console.log(\"can not get video stream\", e);\n      });\n  };\n\n  componentWillUnmount() {\n    this.componentCleanup();\n    window.removeEventListener('beforeunload', this.componentCleanup); // remove the event handler for normal unmounting\n    sendProfile(this.props.videoData.receiverId)\n    setMissedCall(this.props.videoData.videoId)\n    \n  }\n\n \n  makeOffer = async () => {\n    await this.createOffer();\n    this.createOffer();\n  };\n\n  /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n\n  createOffer = async () => {\n    await this.setState({ sender: true });\n\n    console.log(this.props.currentUser);\n    console.log(\"Offer\");\n\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then((sdp) => {\n      this.pc.setLocalDescription(sdp);\n\n      sendSDP(sdp, this.props.videoData.videoId);\n    });\n  };\n\n\n\n  // startCall = async () => {\n  //   await this.setvideoData();\n\n  //   await sendVideoData(this.props.videoData);\n  //   await this.setState({ room: this.props.videoData.videoId });\n  //   sendProfile(this.props.videoData.receiverId);\n  // };\n\n  answerCall = async (videoId) => {\n    await this.setState({ room: videoId });\n    console.log(\"rrom\", this.state.room);\n\n    sendId(videoId);\n  };\n\n  createAnswer = () => {\n    console.log(\"Answer\");\n    this.pc.createAnswer({ offerToReceiveVideo: 1 }).then((sdp) => {\n      this.pc.setLocalDescription(sdp);\n\n      sendSDP(sdp);\n    });\n  };\n\n  setRemoteDescription = () => {\n    const desc = JSON.parse(this.textref.value);\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n  };\n\n  addCandidate = () => {\n    this.candidates.forEach((candidate) => {\n      console.log(JSON.stringify(candidate));\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n   \n        </div>\n\n        <VideoChatContent\n          ref1={this.localVideoref}\n          ref2={this.remoteVideoref}\n          startCall={this.startCall}\n          videoData = {this.props.videoData}\n          sendProfile = {sendProfile}\n        />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  receiverInfo: selectReceiverInfo,\n});\nexport default connect(mapStateToProps)(VideoChat);\n\n\nexport const closeVideoBox = () => {\n  this.props.toggleVideoBox()\n}","C:\\Users\\aamir\\mainp\\portp\\src\\webRTC\\utils.js",["417","418","419","420","421","422","423","424"],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-content.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-requests.js",["425"],"import { closeVideoBox } from './Video-chat'\n\nexport const sendVideoData = async (videoData) => {\n  const {\n    receiver,\n    receiverId,\n    receiverJoined,\n    sender,\n    senderId,\n    videoId,\n  } = videoData;\n\n  if(!receiverId){\n    return alert('connection error try again')\n  }\n  await fetch(\"https://aamirproject-api.herokuapp.com/addvideoinfo\", {\n\n  // await fetch(\"http://localhost:4000/addvideoinfo\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      videoId: videoId,\n      senderId: senderId,\n      receiverId: receiverId,\n      sender: sender,\n      receiver: receiver,\n      receiverJoined: receiverJoined,\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => {});\n};\n\nexport const setMissedCall = async (videoId) => {\n  await fetch(\"https://aamirproject-api.herokuapp.com/setmissedcall\", {\n\n  // await fetch(\"http://localhost:4000/setmissedcall\", {\n    method: \"put\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      videoId: videoId,\n    }),\n  })\n  .then((res) => res.json())\n  .then((data) => {\n    return data;\n  });\n};\n\nexport const fetchcallinfo = async (userId) => {\n  await fetch(\"https://aamirproject-api.herokuapp.com/fetchcallinfo\", {\n\n  // await fetch(\"http://localhost:4000/fetchcallinfo\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      userId: userId.toString(),\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      return data;\n    });\n};\n\n\n\n","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\video-sockets.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\video-chat-log\\Video-chat-log.js",["426","427"],"import React,{useState, useEffect} from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getReceiverInfo } from \"../../redux/profile/profile.actions\"\n\n\nfunction VideoChatLog({data,openVideoBox, beginCall,getReceiverInfo}) {\n\n  const [profileInfo, setProfileInfo] = useState({\n    recieverId: \"\",\n    recieverName: \"\",\n  });\n\n  useEffect(() => {\n    setProfileInfo({\n      recieverId: data.receiverid,\n      recieverName: data.receiver,\n    });\n  }, [setProfileInfo, data.receiverid,, data.receiver]);\n\n    const startVideoCall = async () => {\n      await getReceiverInfo(profileInfo);\n      beginCall();\n      openVideoBox()\n      setTimeout(function(){ beginCall() }, 1000);\n  \n    }\n  return (\n  \n  \n  <div>\n\n\n{ data.senderstatus === 'missedcall'\n \n?<div>\n<span>{data.sender} called at {data.date.slice(0, 10)} </span>\n<span>status is {data.senderstatus}</span>\n{/* <button onClick={startVideoCall}>call</button> */}\n</div>\n\n:null}\n\n  </div>\n\n)\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getReceiverInfo: (profileData) => dispatch(getReceiverInfo(profileData)),\n})\n\nexport default connect(null, mapDispatchToProps)(VideoChatLog);\n",{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":97,"column":10,"nodeType":"434","messageId":"435","endLine":97,"endColumn":15},{"ruleId":"432","severity":1,"message":"436","line":97,"column":17,"nodeType":"434","messageId":"435","endLine":97,"endColumn":25},{"ruleId":"432","severity":1,"message":"437","line":98,"column":10,"nodeType":"434","messageId":"435","endLine":98,"endColumn":19},{"ruleId":"432","severity":1,"message":"438","line":98,"column":21,"nodeType":"434","messageId":"435","endLine":98,"endColumn":33},{"ruleId":"439","severity":1,"message":"440","line":118,"column":7,"nodeType":"441","endLine":118,"endColumn":57,"suggestions":"442"},{"ruleId":"432","severity":1,"message":"443","line":293,"column":9,"nodeType":"434","messageId":"435","endLine":293,"endColumn":19},{"ruleId":"432","severity":1,"message":"444","line":299,"column":9,"nodeType":"434","messageId":"435","endLine":299,"endColumn":21},{"ruleId":"428","replacedBy":"445"},{"ruleId":"430","replacedBy":"446"},{"ruleId":"447","severity":1,"message":"448","line":190,"column":7,"nodeType":"449","messageId":"450","endLine":190,"endColumn":16},{"ruleId":"432","severity":1,"message":"451","line":368,"column":11,"nodeType":"434","messageId":"435","endLine":368,"endColumn":22},{"ruleId":"432","severity":1,"message":"452","line":5,"column":9,"nodeType":"434","messageId":"435","endLine":5,"endColumn":16},{"ruleId":"432","severity":1,"message":"453","line":6,"column":9,"nodeType":"434","messageId":"435","endLine":6,"endColumn":25},{"ruleId":"428","replacedBy":"454"},{"ruleId":"430","replacedBy":"455"},{"ruleId":"428","replacedBy":"456"},{"ruleId":"430","replacedBy":"457"},{"ruleId":"432","severity":1,"message":"458","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":25},{"ruleId":"432","severity":1,"message":"459","line":9,"column":3,"nodeType":"434","messageId":"435","endLine":9,"endColumn":10},{"ruleId":"428","replacedBy":"460"},{"ruleId":"430","replacedBy":"461"},{"ruleId":"432","severity":1,"message":"462","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":23},{"ruleId":"432","severity":1,"message":"458","line":1,"column":25,"nodeType":"434","messageId":"435","endLine":1,"endColumn":33},{"ruleId":"432","severity":1,"message":"463","line":1,"column":35,"nodeType":"434","messageId":"435","endLine":1,"endColumn":44},{"ruleId":"432","severity":1,"message":"464","line":6,"column":3,"nodeType":"434","messageId":"435","endLine":6,"endColumn":16},{"ruleId":"432","severity":1,"message":"465","line":7,"column":3,"nodeType":"434","messageId":"435","endLine":7,"endColumn":16},{"ruleId":"432","severity":1,"message":"466","line":8,"column":3,"nodeType":"434","messageId":"435","endLine":8,"endColumn":16},{"ruleId":"432","severity":1,"message":"467","line":13,"column":3,"nodeType":"434","messageId":"435","endLine":13,"endColumn":12},{"ruleId":"432","severity":1,"message":"468","line":23,"column":10,"nodeType":"434","messageId":"435","endLine":23,"endColumn":27},{"ruleId":"432","severity":1,"message":"469","line":62,"column":7,"nodeType":"434","messageId":"435","endLine":62,"endColumn":19},{"ruleId":"432","severity":1,"message":"470","line":63,"column":7,"nodeType":"434","messageId":"435","endLine":63,"endColumn":19},{"ruleId":"471","severity":1,"message":"472","line":78,"column":16,"nodeType":"473","messageId":"450","endLine":78,"endColumn":18},{"ruleId":"474","severity":2,"message":"475","line":2,"column":5,"nodeType":"434","messageId":"476","endLine":2,"endColumn":7},{"ruleId":"474","severity":2,"message":"475","line":5,"column":9,"nodeType":"434","messageId":"476","endLine":5,"endColumn":11},{"ruleId":"474","severity":2,"message":"477","line":10,"column":29,"nodeType":"434","messageId":"476","endLine":10,"endColumn":36},{"ruleId":"474","severity":2,"message":"475","line":11,"column":5,"nodeType":"434","messageId":"476","endLine":11,"endColumn":7},{"ruleId":"474","severity":2,"message":"475","line":15,"column":5,"nodeType":"434","messageId":"476","endLine":15,"endColumn":7},{"ruleId":"474","severity":2,"message":"475","line":18,"column":9,"nodeType":"434","messageId":"476","endLine":18,"endColumn":11},{"ruleId":"474","severity":2,"message":"477","line":23,"column":34,"nodeType":"434","messageId":"476","endLine":23,"endColumn":41},{"ruleId":"474","severity":2,"message":"475","line":26,"column":5,"nodeType":"434","messageId":"476","endLine":26,"endColumn":7},{"ruleId":"432","severity":1,"message":"478","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":19,"column":6,"nodeType":"441","messageId":"481","endLine":19,"endColumn":55},{"ruleId":"432","severity":1,"message":"482","line":21,"column":11,"nodeType":"434","messageId":"435","endLine":21,"endColumn":25},"no-native-reassign",["483"],"no-negated-in-lhs",["484"],"no-unused-vars","'timer' is assigned a value but never used.","Identifier","unusedVar","'setTimer' is assigned a value but never used.","'onConnect' is assigned a value but never used.","'setOnConnect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'receiverInfo'. Either include it or remove the dependency array.","ArrayExpression",["485"],"'uploadInfo' is assigned a value but never used.","'putVideoData' is assigned a value but never used.",["483"],["484"],"no-dupe-keys","Duplicate key 'createdAt'.","ObjectExpression","unexpected","'downloadURL' is assigned a value but never used.","'addItem' is defined but never used.","'toggleCartHidden' is defined but never used.",["483"],["484"],["483"],["484"],"'useState' is defined but never used.","'sendSDP' is defined but never used.",["483"],["484"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'sendVideoData' is defined but never used.","'getCallerInfo' is defined but never used.","'fetchcallinfo' is defined but never used.","'enterCall' is defined but never used.","'initiateVidSocket' is defined but never used.","'receiverInfo' is assigned a value but never used.","'receivedData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-undef","'lc' is not defined.","undef","'textRef' is not defined.","'closeVideoBox' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'startVideoCall' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"486","fix":"487"},"Update the dependencies array to be: [currentUser, receiverInfo, receiverInfo.recieverId, setVideoData]",{"range":"488","text":"489"},[3044,3094],"[currentUser, receiverInfo, receiverInfo.recieverId, setVideoData]"]