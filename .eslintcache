[{"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\index.js":"1","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\reportWebVitals.js":"2","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\App.js":"3","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\store.js":"5","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\providers\\message\\message.provider.js":"6","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\root-saga.js":"7","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\modal\\Modal.js":"8","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\root-reducer.js":"9","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.selectors.js":"10","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js":"11","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\store-page\\Store-page.js":"12","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\signon-page\\Signon.js":"13","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\profile\\Profile.js":"14","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js":"15","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\list-item\\List-item.js":"16","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js":"17","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js":"18","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\category\\Category-page.js":"19","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\product-page\\Product-page.js":"20","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js":"21","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js":"22","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.sagas.js":"23","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.reducer.js":"24","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js":"25","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js":"26","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js":"27","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js":"28","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js":"29","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js":"30","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.reducer.js":"31","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js":"32","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.sagas.js":"33","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.actions.js":"34","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.actions.js":"35","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js":"36","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.actions.js":"37","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.actions.js":"38","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js":"39","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js":"40","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.reducer.js":"41","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.actions.js":"42","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js":"43","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js":"44","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.selectors.js":"45","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.actions.js":"46","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.actions.js":"47","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.actions.js":"48","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js":"49","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js":"50","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\signin&signup\\Signup.js":"51","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\signin&signup\\Signin.js":"52","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\sockets\\sockets.js":"53","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\firebase\\firebase.js":"54","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js":"55","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js":"56","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js":"57","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js":"58","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js":"59","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js":"60","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\groupchat\\Group-chat.js":"61","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js":"62","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js":"63","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-requests.js":"64","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\video-chat\\Video-chat.js":"65","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\groupchat-dropdown\\Groupchat-dropdown.js":"66","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\video-chat-log\\Video-chat-log.js":"67","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\message-box\\Message-box.js":"68","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\product-item\\Product-item.js":"69","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js":"70","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\categories\\Categories.js":"71","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js":"72","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js":"73","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js":"74","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js":"75","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\add-items\\Add-items.js":"76","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.types.js":"77","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.types.js":"78","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.types.js":"79","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.types.js":"80","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.types.js":"81","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.types.js":"82","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.utils.js":"83","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.types.js":"84","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.types.js":"85","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.selectors.js":"86","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-item.js":"87","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js":"88","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js":"89","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-button.js":"90","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\add-review\\Add-review.js":"91","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js":"92","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\search-box\\Search-box.js":"93"},{"size":1039,"mtime":1618334571000,"results":"94","hashOfConfig":"95"},{"size":364,"mtime":1618334571000,"results":"96","hashOfConfig":"95"},{"size":2350,"mtime":1619136713164,"results":"97","hashOfConfig":"95"},{"size":5092,"mtime":1618334571000,"results":"98","hashOfConfig":"95"},{"size":681,"mtime":1618334571000,"results":"99","hashOfConfig":"95"},{"size":1477,"mtime":1618334571000,"results":"100","hashOfConfig":"95"},{"size":569,"mtime":1619131476238,"results":"101","hashOfConfig":"95"},{"size":511,"mtime":1618334571000,"results":"102","hashOfConfig":"95"},{"size":978,"mtime":1619137010512,"results":"103","hashOfConfig":"95"},{"size":775,"mtime":1622930267576,"results":"104","hashOfConfig":"95"},{"size":597,"mtime":1619131476180,"results":"105","hashOfConfig":"95"},{"size":866,"mtime":1619131475817,"results":"106","hashOfConfig":"95"},{"size":666,"mtime":1618334571000,"results":"107","hashOfConfig":"95"},{"size":10421,"mtime":1622930278364,"results":"108","hashOfConfig":"95"},{"size":4450,"mtime":1627249554239,"results":"109","hashOfConfig":"95"},{"size":729,"mtime":1618334571000,"results":"110","hashOfConfig":"95"},{"size":2064,"mtime":1618334571000,"results":"111","hashOfConfig":"95"},{"size":4278,"mtime":1627003970231,"results":"112","hashOfConfig":"95"},{"size":380,"mtime":1618334571000,"results":"113","hashOfConfig":"95"},{"size":1673,"mtime":1619131475695,"results":"114","hashOfConfig":"95"},{"size":18460,"mtime":1622930643709,"results":"115","hashOfConfig":"95"},{"size":1549,"mtime":1624628931729,"results":"116","hashOfConfig":"95"},{"size":5388,"mtime":1619131476368,"results":"117","hashOfConfig":"95"},{"size":1902,"mtime":1621548915092,"results":"118","hashOfConfig":"95"},{"size":1433,"mtime":1619131476169,"results":"119","hashOfConfig":"95"},{"size":1391,"mtime":1618334571000,"results":"120","hashOfConfig":"95"},{"size":1647,"mtime":1619131476089,"results":"121","hashOfConfig":"95"},{"size":2690,"mtime":1618334571000,"results":"122","hashOfConfig":"95"},{"size":2788,"mtime":1620328662263,"results":"123","hashOfConfig":"95"},{"size":1247,"mtime":1618334571000,"results":"124","hashOfConfig":"95"},{"size":2021,"mtime":1619217810472,"results":"125","hashOfConfig":"95"},{"size":2069,"mtime":1618334571000,"results":"126","hashOfConfig":"95"},{"size":4904,"mtime":1619221964753,"results":"127","hashOfConfig":"95"},{"size":811,"mtime":1619131476161,"results":"128","hashOfConfig":"95"},{"size":1203,"mtime":1618334571000,"results":"129","hashOfConfig":"95"},{"size":621,"mtime":1619136622865,"results":"130","hashOfConfig":"95"},{"size":2710,"mtime":1619131476332,"results":"131","hashOfConfig":"95"},{"size":1518,"mtime":1618334571000,"results":"132","hashOfConfig":"95"},{"size":1122,"mtime":1618334571000,"results":"133","hashOfConfig":"95"},{"size":1420,"mtime":1621709805963,"results":"134","hashOfConfig":"95"},{"size":368,"mtime":1618334571000,"results":"135","hashOfConfig":"95"},{"size":162,"mtime":1618334571000,"results":"136","hashOfConfig":"95"},{"size":1205,"mtime":1618334571000,"results":"137","hashOfConfig":"95"},{"size":544,"mtime":1619131476141,"results":"138","hashOfConfig":"95"},{"size":728,"mtime":1619217850336,"results":"139","hashOfConfig":"95"},{"size":2087,"mtime":1619217555426,"results":"140","hashOfConfig":"95"},{"size":1597,"mtime":1619275877021,"results":"141","hashOfConfig":"95"},{"size":651,"mtime":1618334571000,"results":"142","hashOfConfig":"95"},{"size":490,"mtime":1618334571000,"results":"143","hashOfConfig":"95"},{"size":1798,"mtime":1618334571000,"results":"144","hashOfConfig":"95"},{"size":3452,"mtime":1618334571000,"results":"145","hashOfConfig":"95"},{"size":2270,"mtime":1619447696162,"results":"146","hashOfConfig":"95"},{"size":3378,"mtime":1619274601664,"results":"147","hashOfConfig":"95"},{"size":11823,"mtime":1619131475298,"results":"148","hashOfConfig":"95"},{"size":2884,"mtime":1619131474517,"results":"149","hashOfConfig":"95"},{"size":2071,"mtime":1618334571000,"results":"150","hashOfConfig":"95"},{"size":1567,"mtime":1619131474631,"results":"151","hashOfConfig":"95"},{"size":2439,"mtime":1619131474872,"results":"152","hashOfConfig":"95"},{"size":3939,"mtime":1619131475522,"results":"153","hashOfConfig":"95"},{"size":3261,"mtime":1622932394754,"results":"154","hashOfConfig":"95"},{"size":11938,"mtime":1619289568364,"results":"155","hashOfConfig":"95"},{"size":2281,"mtime":1619131475154,"results":"156","hashOfConfig":"95"},{"size":3887,"mtime":1624569348910,"results":"157","hashOfConfig":"95"},{"size":1466,"mtime":1619131475845,"results":"158","hashOfConfig":"95"},{"size":8030,"mtime":1619131475879,"results":"159","hashOfConfig":"95"},{"size":2219,"mtime":1619289398031,"results":"160","hashOfConfig":"95"},{"size":1215,"mtime":1619131475188,"results":"161","hashOfConfig":"95"},{"size":6390,"mtime":1619276071376,"results":"162","hashOfConfig":"95"},{"size":5308,"mtime":1619131474775,"results":"163","hashOfConfig":"95"},{"size":2365,"mtime":1618334571000,"results":"164","hashOfConfig":"95"},{"size":1823,"mtime":1618334571000,"results":"165","hashOfConfig":"95"},{"size":704,"mtime":1618334571000,"results":"166","hashOfConfig":"95"},{"size":1476,"mtime":1618334571000,"results":"167","hashOfConfig":"95"},{"size":1462,"mtime":1618334571000,"results":"168","hashOfConfig":"95"},{"size":1915,"mtime":1618334571000,"results":"169","hashOfConfig":"95"},{"size":5481,"mtime":1619276566777,"results":"170","hashOfConfig":"95"},{"size":1147,"mtime":1618334571000,"results":"171","hashOfConfig":"95"},{"size":408,"mtime":1618334571000,"results":"172","hashOfConfig":"95"},{"size":544,"mtime":1618334571000,"results":"173","hashOfConfig":"95"},{"size":641,"mtime":1618334571000,"results":"174","hashOfConfig":"95"},{"size":662,"mtime":1619131476148,"results":"175","hashOfConfig":"95"},{"size":111,"mtime":1618334571000,"results":"176","hashOfConfig":"95"},{"size":2042,"mtime":1618334571000,"results":"177","hashOfConfig":"95"},{"size":299,"mtime":1618334571000,"results":"178","hashOfConfig":"95"},{"size":1045,"mtime":1619217427342,"results":"179","hashOfConfig":"95"},{"size":187,"mtime":1618334571000,"results":"180","hashOfConfig":"95"},{"size":1305,"mtime":1627003764655,"results":"181","hashOfConfig":"95"},{"size":3471,"mtime":1619131475140,"results":"182","hashOfConfig":"95"},{"size":1233,"mtime":1618334571000,"results":"183","hashOfConfig":"95"},{"size":855,"mtime":1618334571000,"results":"184","hashOfConfig":"95"},{"size":3377,"mtime":1619131474261,"results":"185","hashOfConfig":"95"},{"size":1507,"mtime":1619131474453,"results":"186","hashOfConfig":"95"},{"size":616,"mtime":1618334571000,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1o5r930",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"190"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"190"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"190"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"190"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\index.js",[],["379","380"],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\reportWebVitals.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\App.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\store.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\providers\\message\\message.provider.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\root-saga.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\modal\\Modal.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\root-reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\store-page\\Store-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\signon-page\\Signon.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\profile\\Profile.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\list-item\\List-item.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\category\\Category-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\product-page\\Product-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.sagas.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.sagas.js",["381"],"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { sendMessageFailed } from \"../messages/messages.actions\";\n\nimport {\n  createGroupFailure,\n  createGroupSuccess,\n  getGroupsSuccess,\n  getGroupsFailed,\n  fetchGroupMessagesSuccess,\n  fetchGroupMessagesFailure,\n  sendGroupMessageSuccess,\n  sendGroupMessageFailure,\n  fetchGroupDataSuccess,\n  fetchGroupDataFailure\n} from \"./groupchat.actions\";\nimport groupchatActionTypes from \"./groupchat.types\";\n\nexport function* sendGroupAsync({\n  payload: { groupId, groupName, creatorId, name, userId },\n}) {\n  try {\n    const response = yield fetch(\n      \"https://aamirproject-api.herokuapp.com/addgroupchat\",\n      {\n        // const response = yield fetch('http://localhost:4000/addgroupchat',{\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          groupId: groupId,\n          groupName: groupName,\n          creatorId: creatorId,\n          name: name,\n          userId: userId,\n        }),\n      }\n    );\n    const data = yield response.json();\n    if (data.groupId) {\n      yield put(\n        createGroupSuccess({\n          payload: { groupId, groupName, creatorId, name, userId },\n        })\n      );\n    }\n  } catch (error) {\n    yield put(createGroupFailure(error));\n  }\n}\n\nexport function* fetchGroupChatAsync({ payload: userId }) {\n  try {\n    const response = yield fetch(\n      \"https://aamirproject-api.herokuapp.com/fetchgroupchats\",\n      {\n        // const response = yield fetch('http://localhost:4000/fetchmessages',{\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          userId: userId,\n        }),\n      }\n    );\n    const data = yield response.json();\n    yield put(getGroupsSuccess(data));\n  } catch (error) {\n    yield put(getGroupsFailed(error));\n  }\n}\n\nexport function* sendMessageAsync({\n  payload: { groupId, message, userName, messageId, userId, image, video },\n}) {\n  try {\n    const response = yield fetch(\n      \"https://aamirproject-api.herokuapp.com/addgroupmessages\",\n      {\n        // const response = yield fetch('http://localhost:4000/addgroupchat',{\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          groupId: groupId,\n          userId: userId,\n          messageId: messageId,\n          video: video,\n          image: image,\n          userName: userName,\n          message: message,\n        }),\n      }\n    );\n    const data = yield response.json();\n    if (data.groupId) {\n      yield put(\n        sendGroupMessageSuccess({\n          payload: { groupId, message, userName, messageId, userId, image, video},\n        })\n      );\n    }\n  } catch (error) {\n    yield put(sendGroupMessageFailure(error));\n  }\n}\n\nexport function* fetchgroupDataAsync({ payload: groupid }) {\n  try {\n    const response = yield fetch(\n      \"https://aamirproject-api.herokuapp.com/fetchgroupdata\",\n      {\n        // const response = yield fetch('http://localhost:4000/fetchmessages',{\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          groupid: groupid,\n        }),\n      }\n    );\n    const data = yield response.json();\n    yield put(fetchGroupDataSuccess(data));\n  } catch (error) {\n    yield put(fetchGroupDataFailure(error));\n  }\n}\n \n\nexport function* fetchMessageAsync({ payload: groupid }) {\n  try {\n    const response = yield fetch(\n      \"https://aamirproject-api.herokuapp.com/fetchgroupmessages\",\n      {\n        // const response = yield fetch('http://localhost:4000/fetchmessages',{\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          groupid: groupid,\n        }),\n      }\n    );\n    const data = yield response.json();\n    yield put(fetchGroupMessagesSuccess(data));\n  } catch (error) {\n    yield put(fetchGroupMessagesFailure(error));\n  }\n}\nexport function* onCreateGroupChatPending() {\n  yield takeLatest(groupchatActionTypes.CREATE_GROUP_PENDING, sendGroupAsync);\n}\nexport function* onGetGroupChatPending() {\n  yield takeLatest(\n    groupchatActionTypes.GET_GROUPS_PENDING,\n    fetchGroupChatAsync\n  );\n}\n\nexport function * onSendMessagePending() {\n  yield takeLatest(\n    groupchatActionTypes.SEND_GMESSAGE_PENDING, \n    sendMessageAsync\n  )\n}\nexport function * onFetchMessagePending() {\n  yield takeLatest(\n    groupchatActionTypes.FETCH_GMESSAGE_PENDING, \n    fetchMessageAsync\n  )\n}\n\nexport function * onFetchGroupDataPending() {\n  yield takeLatest(\n    groupchatActionTypes.FETCH_GROUPDATA_PENDING,\n    fetchgroupDataAsync\n  )\n}\n\n\nexport function* groupchatSagas() {\n  yield all([\n    call(onCreateGroupChatPending), \n    call(onGetGroupChatPending),\n    call(onSendMessagePending),\n    call(onFetchMessagePending),\n    call(onFetchGroupDataPending)\n  ]);\n}\n","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\signin&signup\\Signup.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\signin&signup\\Signin.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\sockets\\sockets.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\firebase\\firebase.js",["382"],"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyCCUAnG030Pik83ErdX3DyHBqypx0qTM1A\",\n  authDomain: \"aamir-project-492ef.firebaseapp.com\",\n  projectId: \"aamir-project-492ef\",\n  storageBucket: \"aamir-project-492ef.appspot.com\",\n  messagingSenderId: \"926729331205\",\n  appId: \"1:926729331205:web:623421273d59ce346ff26c\",\n  measurementId: \"G-KGV9XG51P2\",\n};\n\n//user functions:\nexport const createUserProfileDoc = async (userData, additionalData) => {\n  // handles google and emailsignin\n  if (!userData) return;\n  const profileId = Math.random() + Math.random();\n  const profileRef = firestore.doc(`profile/${profileId}`);\n  const messageRef = firestore.doc(`messages/${profileId}`);\n  const userRef = firestore.doc(`users/${userData.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    // createes new user info\n    const { displayName, email, senderName, message } = userData;\n    const createdAt = new Date();\n\n    const status = \"\";\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n\n      await profileRef.set({\n        displayName,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n      await messageRef.set({\n        displayName,\n        createdAt,\n        senderName,\n        message,\n        profileId,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error(\"error creating new user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const updateDisplayName = async (profileId, name) => {\n  if (!profileId) return;\n  firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ displayName: name });\n      });\n    });\n};\n\nexport const updateDisplayNameforUsers = async (userId, name) => {\n  firestore.collection(\"users\").doc(userId).update({ displayName: name });\n};\n\nexport const updateStatus = async (profileId, status) => {\n  await firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ status: status });\n      });\n    });\n};\n\nexport const getProfileDoc = async (profileId) => {\n  const collectionRef = firestore.collection(\"profile\");\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      profileId: doc.data().profileId,\n      displayName: doc.data().displayName,\n      status: doc.data().status,\n    };\n  });\n};\n\nexport const getProfileName = async (profileId) => {\n  const collectionRef = firestore\n    .collection(\"profile\")\n\n    .where(\"profileId\", \"==\", profileId);\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return doc.data().displayName;\n  });\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    // cheks to see if user is signedin\n    const unsubscribe = auth.onAuthStateChanged((userData) => {\n      //if sign in state changes\n      unsubscribe(); //unsubscribe/closes session\n      resolve(userData);\n    }, reject);\n  });\n};\n\n//messaging functions:\n\nexport const setMessageDoc = async (messageData) => {\n  const uid = Math.random() + Math.random();\n  const collectionRef = firestore.doc(`message/${uid}`);\n  const {\n    senderId,\n    message,\n    senderName,\n    recieverName,\n    recieverId,\n  } = messageData;\n  const createdAt = new Date().toDateString();\n\n  try {\n    await collectionRef.set({\n      message,\n      recieverId,\n      senderName,\n      recieverName,\n      createdAt,\n      senderId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\nexport const getRecievedMessageDoc = async (recieverId) => {\n  if (!recieverId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"asc\")\n    .where(\"recieverId\", \"==\", recieverId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      message: doc.data().message,\n      senderId: doc.data().senderId,\n      senderName: doc.data().senderName,\n      createdAt: doc.data().createdAt,\n    };\n  });\n};\n\nexport const getSentMessageDoc = async (senderId) => {\n  if (!senderId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"asc\")\n    .where(\"senderId\", \"==\", senderId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      message: doc.data().message,\n\n      senderId: doc.data().senderId,\n      recieverName: doc.data().recieverName,\n      createdAt: doc.data().createdAt,\n    };\n  });\n};\n\n// shop functions:\nexport const setItemsDoc = async (itemData) => {\n  const productId = itemData.productId + Math.random();\n  const collectionRef = firestore.doc(`items/${productId}${itemData.userId}}`);\n  const {\n    price,\n    category,\n    soldBy,\n    picture,\n    description,\n    userId,\n    name,\n  } = itemData;\n\n  const createdAt = new Date();\n\n  try {\n    await collectionRef.set({\n      name,\n      price,\n      category,\n      soldBy,\n      picture,\n      description,\n      userId,\n      createdAt,\n      productId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\n// export const setItemsHistoryDoc = async ( itemData) =>{\n\n//   const collectionRef = firestore.doc(`itemshistory/${itemData.productId}${itemData.userId}}`)\n//   const name = itemData.name.toLowerCase();\n//   const {  price, category, soldBy, picture, description,userId,name} = itemData;\n//   const createdAt = new Date ();\n//   const productId = itemData.productId+Math.random()\n// try{\n//   await collectionRef.set({\n//     name, price, category, soldBy, picture, description, userId,\n//     createdAt,productId,\n//   })\n// } catch(error){\n//   console.error('error creating new listing', error.message);\n// }\n\n// }\n\nexport const getItemsDoc = async (collection) => {\n  if (!collection) return;\n  const collectionRef = firestore.collection(collection); // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getSellingItemsDoc = async (profileId) => {\n  if (!profileId) return;\n  const collectionRef = firestore\n    .collection(\"items\")\n    .where(\"userId\", \"==\", profileId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const deleteListing = async (userId, productId) => {\n  if (!userId) return;\n  const deleteRef = firestore\n    .collection(\"items\")\n    .where(\"productId\", \"==\", productId)\n    .where(\"userId\", \"==\", userId);\n  deleteRef.get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      doc.ref.delete();\n    });\n  });\n};\n\nexport const getCategoryDoc = async (collection, category) => {\n  if (!collection) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"category\", \"==\", category);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getProductDoc = async (collection, productId) => {\n  if (!productId) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"productId\", \"==\", productId);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getListedProductDoc = async (collection, soldBy) => {\n  if (!soldBy) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"soldBy\", \"==\", soldBy);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getSearchFilteredDoc = async (collection, name) => {\n  if (!name) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"name\", \">=\", name)\n    .where(\"name\", \"<=\", name + \"\\uf8ff\");\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const setReviewsDoc = async (reviewData) => {\n  const reviewId = reviewData.productId + Math.random();\n  const collectionRef = firestore.doc(`reviews/${reviewId}}`);\n\n  console.log(reviewData.userName);\n  const {\n    review,\n    productId,\n    rating,\n    userName,\n    userId,\n    productName,\n  } = reviewData;\n\n  const createdAt = new Date();\n\n  try {\n    await collectionRef.set({\n      userName,\n      rating,\n      productName,\n      review,\n      userId,\n      createdAt,\n      productId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\nexport const getReviewsDoc = async (productId) => {\n  if (!productId) return;\n  const collectionRef = firestore\n    .collection(\"reviews\")\n    .where(\"productId\", \"==\", productId); // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return doc.data();\n  });\n};\n\n//profile picture functions:\nexport const uploadImageToStorage = (profileimage, profileId) => {\n  if (!profileimage || !profileId) return;\n\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  let file = profileimage[0];\n  let uploadTask = imageRef.put(file);\n\n  if (imageRef.exists) {\n    // delete previous profile image\n    imageRef.delete();\n    return uploadImage(uploadTask);\n  }\n\n  return uploadImage(uploadTask);\n};\n\nconst uploadImage = (uploadTask) => {\n  try {\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, () => {\n      let downloadURL = uploadTask.snapshot.downloadURL;\n    });\n  } catch (error) {\n    console.error(\"error uploading new image\", error.message);\n  }\n};\n\nexport const getImage = async (profileId) => {\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  const image = await imageRef.getDownloadURL();\n  try {\n    return image;\n  } catch (error) {\n    console.error(\"error\", error.message);\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nexport const googleHandler = new firebase.auth.GoogleAuthProvider(); //handle signin prompt\ngoogleHandler.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleHandler);\n\nexport default firebase;\n","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\groupchat\\Group-chat.js",["383","384"],"import React, { useState, useEffect } from \"react\";\nimport {Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentGroup,selectPending , selectGroupMessages} from \"../../redux/groupchat/groupchat.selectors\";\nimport { sendGroupMessagePending, fetchGroupMessagesPending} from \"../../redux/groupchat/groupchat.actions\"\nimport {selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectProfileName  } from \"../../redux/user/user.selectors\";\nimport {fetchNamePending} from \"../../redux/user/user.actions\"\nimport MessageBox from \"../../components/message-box/Message-box\"\nimport { selectProfileInfo } from \"../../redux/profile/profile.selectors\";\nimport { fetchProfileInfoPending } from \"../../redux/profile/profile.actions\";\nimport {createGroupPending, getGroupsPending, setCurrentGroup, fetchGroupDataPending } from \"../../redux/groupchat/groupchat.actions\"\nimport {selectGroupChats, selectGroupData} from \"../../redux/groupchat/groupchat.selectors\"\n\nimport {\n \n  sendGroupMsgRequest,\n  enterOnGroupMessage,\n \n} from \"../../sockets/sockets\";\n\nimport GroupchatDropdown from \"../../components/groupchat-dropdown/Groupchat-dropdown\"\n\nimport './Group-chat.scss'\n\nfunction GroupChat({ currentGroup, currentUser, profileName, pending,fetchProfileInfoPending, groupChats,\n  fetchNamePending,sendGroupMessagePending, fetchGroupMessagesPending, groupMessages, profileInfo,createGroupPending, groupData, fetchGroupDataPending}) {\n  \n  const [confirmUser, setConfirmUser] = useState(false)\n  //eslint-disable-next-line\n  const [toggleGroupchat, setToggleGroupchat] = useState(false)\n  // const [searchField, setSearchField] = useState(\"\");\n  const [messageData, setMessageData] = useState({\n    userName: \"\",\n    message: \"\",\n    messageId: \"\",\n    userId: \"\",\n    image: \"\",\n    video: \"\",\n    groupId: \"\",\n  });\n  const [imageToggle, setImageToggle] = useState(false);\n  const [mediaInput, setMediaInput] = useState(false);\nconst [mediaType, setMediaType] = useState('');\nconst [toggleAddUser , setToggleAddUser] = useState(false)\n// const [toggleCreate, setToggleCreate] = useState(false);\nconst [groupChatData, setGroupChatData] = useState({\n \n  groupId: \"\",\n  groupName: \"\",\n  userId: \"\",\n  name: \"\",\n});\n\nconst [uniqueId , setUniqueId] = useState([])\n\nconst [messageIds,setMessageIds] = useState([])\n\n\n\nuseEffect(() => {  // sockets \n\n    enterOnGroupMessage((err, data) => {\n      if (err) return;\n\n      if (data === 'message') {\n        if(currentGroup){\n          fetchGroupMessagesPending(currentGroup.id);\n          }\n        \n      }\n  });\n\n})\n\n\nconst setGroupName = async () => {\n try{\n   createGroupPending(groupChatData);\n   alert(\"user added\")\n   setTimeout(function(){ fetchGroupDataPending(currentGroup.id) }, 1500);\n\n }catch(e){\n     console.log('error',e)\n  \n }\n  \n};\n\nuseEffect(() => {\n  if(groupMessages && profileInfo){\n\n    setMessageIds(groupMessages.map(message => message.userid))\n  \n  \n  }\n},[groupMessages,profileInfo])\n\nuseEffect(() => {\n  if(currentGroup){\n    fetchGroupDataPending(currentGroup.id)\n  }\n},[currentGroup, fetchGroupDataPending])\n\n// useEffect(() => {\n//   if(messageIds){\n//     remeoveDuplicateIds()\n//   }\n// },[messageIds])\n\n  useEffect(() => {\n    if(currentGroup){\n    fetchGroupMessagesPending(currentGroup.id);\n    }\n  }, [fetchGroupMessagesPending,currentGroup]);\n\n  useEffect(() => {\n      if (currentUser && profileName){\n    setMessageData({\n      userName: profileName.toString(),\n      userId: currentUser.profileId,\n      messageId: Math.random(),\n      groupId: currentGroup.id,\n    });\n}\n  }, [currentUser, profileName, currentGroup]);\n\n  useEffect(() => {\n    if(currentUser){\n    fetchNamePending(currentUser.profileId)\n    }\n  }, [currentUser,fetchNamePending]);\n\n  useEffect(() => {\n    \n    fetchProfileInfoPending();\n    //eslint-disable-next-line\n  },[])\n\n  // const filteredMessages = () => {\n  //   return groupMessages.filter((message) => {\n  //     return message.name.toLowerCase().includes(searchField.toLowerCase());\n  //   });\n  // };\n\n  const handleChange = (event) => {\n  \n    //   if(profileName){\n    //   setMessageData({ ...messageData, userName: profileName})\n    //   fetchNamePending(currentUser.profileId)\n    //   }\n    setMessageData({ ...messageData, message: event.target.value });\n\n\n  };\n\n\n  \n  const sendMessage = async (event) => {\n    event.preventDefault();\n    await toggleShowImage();\n    await sendGroupMessagePending(messageData);\n   \n    // sendMsgRequest();\n      setMessageData({\n        userName: profileName.toString(),\n        userId: currentUser.id,\n        messageId: Math.random(),\n        groupId: currentGroup.id,\n        message: \"\",\n        image: \"\",\n        video:''\n      });\n      sendGroupMsgRequest()\n    setTimeout(function(){   fetchGroupMessagesPending(currentGroup.id);}, 1500);\n\n \n    // setImageToggle(false);\n  };  \n\n  const verifyImage = () => {\n    setMessageData({ image: \"\" });\n    setImageToggle(false);\n  };\n\n  const toggleShowImage = () => {\n    setImageToggle(!imageToggle);\n\n    const xhr = new XMLHttpRequest(); //verify url image size\n    xhr.open(\"GET\", messageData.image, true);\n    xhr.responseType = \"image/png\";\n    xhr.onreadystatechange = function () {\n      if (this.readyState === this.DONE) {\n        const size = this.response.byteLength;\n        if (size > 2242880) {\n          alert(\"use an image under 2mb\");\n        }\n      }\n    };\n    xhr.send(null);\n  };\n\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n  const remeoveDuplicateIds = () => {\n    \n    let unique = messageIds.filter(onlyUnique);\n    setUniqueId(unique)\n   \n    \n  }\n\n  const incrementLikes = async (messageid) => {\n    await fetch(\"https://aamirproject-api.herokuapp.com/incrementgrouplikes\", {\n      // fetch('http://localhost:4000/geodata',{\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        messageid: messageid\n      }),\n    })\n\n   \n        setTimeout(function(){ fetchGroupMessagesPending(currentGroup.id)}, 1000);\n      \n      \n  };\n\n\n// var filtered = profileInfo.filter(\n//   function(e) {\n//     return this.indexOf(e) < 0;\n//   },\n//   [2, 4]\n// );\n// console.log(filtered);\n\n  return (\n    <div>\n{/* <span style={{position: 'relative' ,right: '100px', cursor: \"pointer\"}} onClick={()=> setToggleGroupchat(!toggleGroupchat)}>group chats</span> */}\n<Link style={{position:'relative',left:'8%' ,bottom: '-80px' , cursor: \"pointer\"}} to='./chatapp'>Chat App</Link>\n{ toggleGroupchat?\n       currentUser?\n       <div >\n      <GroupchatDropdown currentUser = {currentUser} createGroupPending={createGroupPending} setCurrentGroup = {setCurrentGroup}\n      groupChats = {groupChats} getGroupsPending = {getGroupsPending} />\n      </div>\n      : alert(' signin to see groupchats')\n       : null}\n  <div className=\"groupchat-invited hide-scroll\">\n    <p style ={{fontWeight:'bold' ,position:'relative' ,right: '5px'}}> Invited users</p>\n    {groupData.map((data,i) =>\n    <div key ={i} >\n      <span style ={{position:'relative' ,right: '5px'}}>{data.name}</span>\n      \n      </div>\n      )}\n</div>\n<Link style={{position:'relative',marginLeft: '-60%' ,bottom: '-80px' , cursor: \"pointer\"}} onClick={()=>setToggleAddUser(!toggleAddUser)}>Add user</Link>\n\n\n{toggleAddUser && profileName && groupMessages\n\n \n ? <div className=\"groupchat-adduser hide-scroll\">\n {profileInfo.map(profile => (\n  <div key={profileInfo.profileId}>\n<hr style = {{width:'200px'}}></hr>\n    <div>\n    <span id = ''>{profile.displayName}</span>\n    <button style ={{marginLeft: '10px', background: '#2ca4ab'}} onClick={()=>{ setGroupChatData({...groupChatData, groupId: currentGroup.id, groupName: currentGroup.name, name: profile.displayName, userId: profile.profileId});  setConfirmUser(true); }}>\n      Add to chat</button>\n     \n      </div>\n\n    </div>\n  ))} \n  { confirmUser\n       ?<div className='groupchat-adduser-button'> \n       <button style ={{marginLeft: '10px', marginTop: '10px',background: '#2ca4ab'}} onClick={()=>{ setGroupName();  setConfirmUser(false); }} >confirm</button>\n        <button onClick={()=>setConfirmUser(false)}>X</button>\n        </div>\n       : null}\n\n  </div>\n  \n \n  : null}\n\n\n        <h1 style={{color: '#2ca4ab'}}>group: {currentGroup.name}</h1>\n      <form className=\"chat-page-scroller hide-scroll\" onSubmit={sendMessage}>\n        {pending ? <div className=\"loader\"></div> : null}\n        {groupMessages\n          ? groupMessages.map((message) => (\n              <MessageBox\n                messageData={message}\n                key={message.messageid}\n                fetchMessage={fetchGroupMessagesPending}\n                incrementLikesPending={incrementLikes}\n                sendMsgRequest={sendGroupMsgRequest}\n              />\n            ))\n          : null}\n\n        <textarea\n          id=\"chat-page-send\"\n          value={messageData.message}\n          aria-label=\"add message\"\n          type=\"text-area\"\n          placeholder=\"Enter Messages\"\n          onChange={handleChange}\n          required\n        />\n\n        {mediaInput ? (\n          <div>\n            <input\n              type=\"url\"\n              placeholder={\"add \" + mediaType + \" url\"}\n            onChange={mediaType === \"image\" ?  (event)=> {setMessageData ({ ...messageData, image: event.target.value }); console.log(mediaType) }: (e)=>setMessageData({ ...messageData,video: e.target.value})}\n              id=\"chat-page-image\"\n              // value={messageData.image}\n              aria-label=\"Add Media URl\"\n            />\n            <button id=\"chat-page-imagebutt\" onClick={()=> setMediaInput(false)}>\n              X\n            </button>\n            <span\n              style={{\n                marginBottom: \"23px\",\n                marginLeft: \"24%\",\n                color: \"#2CA4AB\",\n              }}\n              id=\"chat-page-imagebutt\"\n            >\n              {mediaType === \"image\" ? \"Image\" : \"Video\"}\n            </span>\n          </div>\n        ) : null}\n        {currentUser ? (\n          <button id=\"chat-page-button\" type=\"submit\">\n            send\n          </button>\n        ) : (\n \n        null)}\n      </form>\n\n      <div className= 'chat-page-icons-g'>  \n        <div onClick={()=> {setMediaType('image'); setMediaInput(true)}}\n          style={{cursor: \"pointer\",marginRight: '150px',zIndex:'-1',position:'relative'}}>📷  Image</div>  \n\n         <div  onClick={()=> {setMediaType('video'); setMediaInput(true)}}\n                   style={{ marginLeft: '100px',position: 'relative',top: '-20px' ,cursor: 'pointer',zIndex:'-1' }} >🎥  Vid</div>\n      </div> \n      {imageToggle ? (\n          <img\n            src={messageData.image}\n            onError={verifyImage}\n            alt=\"verify\"\n            width=\"5\"\n            height=\"5\"\n          />\n        ) : null}    \n\n        \n    </div>\n  );\n}\nconst mapDispatchToProps = (dispatch) => ({\n    sendGroupMessagePending: (messageData) => dispatch(sendGroupMessagePending(messageData)),\n    getProfileInfo: () => dispatch(fetchProfileInfoPending()),\n fetchNamePending: (profileId) => dispatch(fetchNamePending(profileId)),\n fetchGroupMessagesPending: (groupid) => dispatch(fetchGroupMessagesPending(groupid)),\n fetchProfileInfoPending: () => dispatch(fetchProfileInfoPending()),\n createGroupPending: (groupData) => dispatch(createGroupPending(groupData)),\n fetchGroupDataPending: (groupid) => dispatch(fetchGroupDataPending(groupid))\n  });\n  \nconst mapStateToProps = createStructuredSelector({\n  currentGroup: selectCurrentGroup,\n  pending: selectPending,\n  currentUser: selectCurrentUser,\n  profileName: selectProfileName,\n  groupMessages : selectGroupMessages,\n  profileInfo : selectProfileInfo,\n  groupData : selectGroupData,\n  groupChats: selectGroupChats,\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(GroupChat);\n","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\video-chat\\Video-chat-requests.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\pages\\video-chat\\Video-chat.js",["385"],"import React from \"react\";\n// import VideoChatContent from \"./Video-chat-content\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Draggable from \"react-draggable\";\nimport {\n  // sendVideoData,\n  // getCallerInfo,\n  // fetchcallinfo,\n  setMissedCall,\n} from \"./Video-chat-requests\";\nimport {\n  initiateSocket,\n  // enterCall,\n  sendProfile,\n  enterSDP,\n  sendSDP,\n  enterCand,\n  sendCand,\n  // sendId,\n  checkJoined,\n} from \"../../sockets/sockets\";\n\n// import { initiateVidSocket } from \"../../sockets/video-sockets\";\n\nimport {\n  selectCurrentUser,\n  selectProfileName,\n} from \"../../redux/user/user.selectors\";\nimport { setVideoData } from \"../../redux/messages/messages.actions\";\nimport { selectVideoData } from \"../../redux/messages/messages.selectors\";\nimport { selectReceiverInfo } from \"../../redux/profile/profile.selectors\";\nimport { openVideoBox } from \"../../redux/modal/modal.actions\";\n\nclass VideoChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentCleanup = this.componentCleanup.bind(this);\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n    this.sender = false;\n    this.room = this.props.room;\n\n    this.onCall = \"\";\n    this.remoteCandidate = [];\n  }\n\n  componentCleanup() {\n    // this will hold the cleanup code\n    sendProfile(this.props.receiverInfo.recieverId);\n    setMissedCall(this.props.videoData.videoId);\n  }\n\n  componentDidMount = () => {\n    const {\n      currentUser,\n\n      getCallerInfo,\n\n      room,\n    } = this.props;\n\n    window.addEventListener(\"beforeunload\", this.componentCleanup);\n\n    if (this.props.currentUser) {\n      getCallerInfo(currentUser.profileId);\n    }\n\n    const config = {\n      iceServers: [\n        // {\n        //   urls: 'stun:[STUN_IP]:[PORT]',\n        //   'credentials': '[YOR CREDENTIALS]',\n        //   'username': '[USERNAME]'\n        // },\n        {\n          urls: \"stun:stun.l.google.com:19302\",\n        },\n      ],\n    };\n\n    this.pc = new RTCPeerConnection(config);\n\n    if (room) initiateSocket(room);\n\n    enterCand((data) => {\n      console.log(\"From Peer... \", data);\n      if (data.candidate !== null) {\n        this.candidates = [...this.candidates, data.candidate];\n        // this.pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n        this.addCandidate();\n      }\n    });\n    checkJoined((err, data) => {\n      if (err) return;\n\n      // es-lint-disable-next-line\n      if (data == this.props.videoData.videoId) {\n        sendCand(this.remoteCandidates);\n        this.createOffer();\n      }\n    });\n\n    enterSDP((err, data) => {\n      if (err) return;\n      if (data !== null) {\n        this.pc.setRemoteDescription(new RTCSessionDescription(data));\n      }\n\n      // if(this.sender){\n      //     sendCand(this.state.remoteCandidate,this.state.videoData.videoId)\n      // }\n\n      if (this.sender === false && this.candidates) {\n        // sendCand(this.state.remoteCandidate)\n        this.props.openVideoBox();\n        setTimeout(() => this.createAnswer(), 1000);\n      }\n    });\n\n    this.pc.onicecandidate = (e) => {\n      if (e.candidate) {\n        sendCand(e.candidate);\n        this.remoteCandidates = [e.candidate];\n      }\n    };\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    this.pc.onaddstream = (e) => {\n      console.log(this.remoteVideoref);\n      this.remoteVideoref.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      audio: false,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n    };\n    const streamSuccess = (stream) => {\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.pc.addStream(stream);\n      console.log(stream);\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(streamSuccess)\n      .catch((e) => {\n        console.log(\"can not get video stream\", e);\n      });\n  };\n\n  componentWillUnmount() {\n    if (this.props.currentUser) {\n      this.componentCleanup();\n      window.removeEventListener(\"beforeunload\", this.componentCleanup); // remove the event handler for normal unmounting\n      sendProfile(this.props.receiverInfo.recieverId);\n      setMissedCall(this.props.videoData.videoId);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentUser, receiverInfo, profileName } = this.props;\n    if (currentUser) {\n      if (this.props.receiverInfo !== prevProps.receiverInfo) {\n        this.props.setVideoData({\n          videoId: (Math.random() * Math.random()) / Math.random(),\n          senderId: currentUser.profileId,\n          sender: profileName.toString(),\n          receiverId: receiverInfo.recieverId,\n          receiver: receiverInfo.recieverName,\n          receiverJoined: \"no\",\n        });\n      }\n    }\n  }\n\n  createOffer = async () => {\n    await this.setState({ sender: true });\n\n    console.log(this.props.currentUser);\n    console.log(\"Offer\");\n\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then((sdp) => {\n      this.pc.setLocalDescription(sdp);\n\n      sendSDP(sdp, this.props.videoData.videoId);\n    });\n  };\n\n  // startCall = async () => {\n  //   await this.setvideoData();\n\n  //   await sendVideoData(this.props.videoData);\n  //   await this.setState({ room: this.props.videoData.videoId });\n  //   sendProfile(this.props.videoData.receiverId);\n  // };\n\n  // answerCall = async (videoId) => {\n  //   await this.setState({ room: videoId });\n  //   console.log(\"rrom\", this.state.room);\n\n  //   sendId(videoId);\n  // };\n\n  createAnswer = () => {\n    console.log(\"Answer\");\n    this.pc.createAnswer({ offerToReceiveVideo: 1 }).then((sdp) => {\n      this.pc.setLocalDescription(sdp);\n\n      sendSDP(sdp);\n      this.props.openVideoBox();\n    });\n  };\n\n  setRemoteDescription = () => {\n    const desc = JSON.parse(this.textref.value);\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n  };\n\n  addCandidate = () => {\n    this.candidates.forEach((candidate) => {\n      console.log(JSON.stringify(candidate));\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n  };\n\n  refreshPage = async () => {\n    if (this.props.videoData) {\n      await setMissedCall(this.props.videoData.videoId);\n      await sendProfile(this.props.videoData.receiverId);\n    }\n    window.location.reload();\n  };\n\n  render() {\n    // if(this.state.remoteCandidate){\n    // console.log('r',this.state.remoteCandidate)\n    // }\n    return (\n      <div>\n        <div></div>\n\n        <div>\n          <Draggable>\n            <div className=\"video-chat-container\">\n              <video\n                className=\"video-chat-localstream\"\n                ref={this.localVideoref}\n                autoPlay\n                controls\n              ></video>\n              <video\n                className=\"video-chat-remotestream\"\n                ref={this.remoteVideoref}\n                autoPlay\n                controls\n              >\n                {\" \"}\n              </video>\n\n              <br />\n\n              {/* <button onClick={startCall}>start</button> */}\n              <button\n                style={{ position: \"relative\", right: \"46px\" }}\n                onClick={this.refreshPage}\n              >\n                end call{\" \"}\n              </button>\n            </div>\n          </Draggable>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  receiverInfo: selectReceiverInfo,\n  profileName: selectProfileName,\n  videoData: selectVideoData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVideoData: (videoData) => dispatch(setVideoData(videoData)),\n  openVideoBox: () => dispatch(openVideoBox()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoChat);\n\nexport const closeVideoBox = () => {\n  this.props.toggleVideoBox();\n};\n","C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\groupchat-dropdown\\Groupchat-dropdown.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\video-chat-log\\Video-chat-log.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\message-box\\Message-box.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\product-item\\Product-item.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\categories\\Categories.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\add-items\\Add-items.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\user\\user.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\modal\\modal.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\profile\\profile.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\shop\\shop.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\messages\\messages.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.utils.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\cart\\cart.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\groupchat\\groupchat.types.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\redux\\header\\header.selectors.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-item.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\cart\\Cart-button.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\add-review\\Add-review.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js",[],"C:\\Users\\aamir\\apps\\mainp\\portp\\src\\components\\search-box\\Search-box.js",[],{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","severity":1,"message":"391","line":2,"column":10,"nodeType":"392","messageId":"393","endLine":2,"endColumn":27},{"ruleId":"390","severity":1,"message":"394","line":406,"column":11,"nodeType":"392","messageId":"393","endLine":406,"endColumn":22},{"ruleId":"390","severity":1,"message":"395","line":56,"column":8,"nodeType":"392","messageId":"393","endLine":56,"endColumn":16},{"ruleId":"390","severity":1,"message":"396","line":208,"column":9,"nodeType":"392","messageId":"393","endLine":208,"endColumn":28},{"ruleId":"397","severity":1,"message":"398","line":101,"column":16,"nodeType":"399","messageId":"400","endLine":101,"endColumn":18},"no-native-reassign",["401"],"no-negated-in-lhs",["402"],"no-unused-vars","'sendMessageFailed' is defined but never used.","Identifier","unusedVar","'downloadURL' is assigned a value but never used.","'uniqueId' is assigned a value but never used.","'remeoveDuplicateIds' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]