[{"C:\\Users\\aamir\\mainp\\portp\\src\\index.js":"1","C:\\Users\\aamir\\mainp\\portp\\src\\App.js":"2","C:\\Users\\aamir\\mainp\\portp\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\aamir\\mainp\\portp\\src\\reportWebVitals.js":"4","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js":"5","C:\\Users\\aamir\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js":"6","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js":"7","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\store-page\\Store-page.js":"8","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js":"9","C:\\Users\\aamir\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js":"10","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js":"11","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js":"12","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.actions.js":"13","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.selectors.js":"14","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\store.js":"15","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-reducer.js":"16","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.types.js":"17","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\signon-page\\Signon.js":"18","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.actions.js":"19","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.types.js":"20","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-saga.js":"21","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.sagas.js":"22","C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\Firebase.js":"23","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.reducer.js":"24","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.reducer.js":"25","C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\firebase.js":"26","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.selectors.js":"27","C:\\Users\\aamir\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js":"28","C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signin.js":"29","C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signup.js":"30","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\list-item\\List-item.js":"31","C:\\Users\\aamir\\mainp\\portp\\src\\components\\add-items\\Add-items.js":"32","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js":"33","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js":"34","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.types.js":"35","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js":"36","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.actions.js":"37","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js":"38","C:\\Users\\aamir\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js":"39","C:\\Users\\aamir\\mainp\\portp\\src\\components\\search-box\\Search-box.js":"40","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.actions.js":"41","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.types.js":"42","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js":"43","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js":"44","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js":"45","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.utils.js":"46","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-button.js":"47","C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-item.js":"48","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js":"49","C:\\Users\\aamir\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js":"50","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\category\\Category-page.js":"51","C:\\Users\\aamir\\mainp\\portp\\src\\components\\categories\\Categories.js":"52","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-page\\Product-page.js":"53","C:\\Users\\aamir\\mainp\\portp\\src\\components\\product-item\\Product-item.js":"54","C:\\Users\\aamir\\mainp\\portp\\src\\components\\item-preview\\Items-preview.js":"55","C:\\Users\\aamir\\mainp\\portp\\src\\components\\message-box\\Message-box.js":"56","C:\\Users\\aamir\\mainp\\portp\\src\\providers\\message\\message.provider.js":"57","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js":"58","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.types.js":"59","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js":"60","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.actions.js":"61","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js":"62","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.utils.js":"63","C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal.js":"64","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile.js":"65","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js":"66","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.types.js":"67","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.actions.js":"68","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js":"69","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js":"70","C:\\Users\\aamir\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js":"71","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js":"72","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js":"73","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.types.js":"74","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.actions.js":"75","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js":"76","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js":"77","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js":"78","C:\\Users\\aamir\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js":"79","C:\\Users\\aamir\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js":"80","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js":"81","C:\\Users\\aamir\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js":"82","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js":"83","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\sockets.js":"84","C:\\Users\\aamir\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js":"85","C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal-chatrooms.js":"86"},{"size":1039,"mtime":1616800969927,"results":"87","hashOfConfig":"88"},{"size":2325,"mtime":1616800968852,"results":"89","hashOfConfig":"88"},{"size":5092,"mtime":1616800970904,"results":"90","hashOfConfig":"88"},{"size":364,"mtime":1616800970852,"results":"91","hashOfConfig":"88"},{"size":3690,"mtime":1617118492362,"results":"92","hashOfConfig":"88"},{"size":942,"mtime":1616886942942,"results":"93","hashOfConfig":"88"},{"size":3155,"mtime":1616800969492,"results":"94","hashOfConfig":"88"},{"size":835,"mtime":1616800970310,"results":"95","hashOfConfig":"88"},{"size":7213,"mtime":1617127881783,"results":"96","hashOfConfig":"88"},{"size":1798,"mtime":1616800969747,"results":"97","hashOfConfig":"88"},{"size":1233,"mtime":1616800969646,"results":"98","hashOfConfig":"88"},{"size":2365,"mtime":1616800969597,"results":"99","hashOfConfig":"88"},{"size":162,"mtime":1616800970417,"results":"100","hashOfConfig":"88"},{"size":187,"mtime":1616800970431,"results":"101","hashOfConfig":"88"},{"size":681,"mtime":1616800970772,"results":"102","hashOfConfig":"88"},{"size":873,"mtime":1616800970662,"results":"103","hashOfConfig":"88"},{"size":111,"mtime":1616800970437,"results":"104","hashOfConfig":"88"},{"size":666,"mtime":1616800970292,"results":"105","hashOfConfig":"88"},{"size":2360,"mtime":1616800970787,"results":"106","hashOfConfig":"88"},{"size":1015,"mtime":1616800970843,"results":"107","hashOfConfig":"88"},{"size":481,"mtime":1616800970671,"results":"108","hashOfConfig":"88"},{"size":4926,"mtime":1616800970822,"results":"109","hashOfConfig":"88"},{"size":3200,"mtime":1612192915902,"results":"110","hashOfConfig":"88"},{"size":1622,"mtime":1616800970797,"results":"111","hashOfConfig":"88"},{"size":368,"mtime":1616800970424,"results":"112","hashOfConfig":"88"},{"size":11036,"mtime":1617112882620,"results":"113","hashOfConfig":"88"},{"size":773,"mtime":1616800970835,"results":"114","hashOfConfig":"88"},{"size":490,"mtime":1616800969574,"results":"115","hashOfConfig":"88"},{"size":2270,"mtime":1616800969702,"results":"116","hashOfConfig":"88"},{"size":3452,"mtime":1616800969731,"results":"117","hashOfConfig":"88"},{"size":729,"mtime":1616800970129,"results":"118","hashOfConfig":"88"},{"size":5304,"mtime":1616800968891,"results":"119","hashOfConfig":"88"},{"size":4278,"mtime":1616800970158,"results":"120","hashOfConfig":"88"},{"size":1391,"mtime":1616800970707,"results":"121","hashOfConfig":"88"},{"size":641,"mtime":1616800970764,"results":"122","hashOfConfig":"88"},{"size":2690,"mtime":1616800970735,"results":"123","hashOfConfig":"88"},{"size":1518,"mtime":1616800970684,"results":"124","hashOfConfig":"88"},{"size":1122,"mtime":1616800970758,"results":"125","hashOfConfig":"88"},{"size":1476,"mtime":1616800969309,"results":"126","hashOfConfig":"88"},{"size":616,"mtime":1616800969548,"results":"127","hashOfConfig":"88"},{"size":651,"mtime":1616800970338,"results":"128","hashOfConfig":"88"},{"size":299,"mtime":1616800970396,"results":"129","hashOfConfig":"88"},{"size":704,"mtime":1616800970390,"results":"130","hashOfConfig":"88"},{"size":2071,"mtime":1616800968978,"results":"131","hashOfConfig":"88"},{"size":1205,"mtime":1616800970364,"results":"132","hashOfConfig":"88"},{"size":2042,"mtime":1616800970409,"results":"133","hashOfConfig":"88"},{"size":855,"mtime":1616800968956,"results":"134","hashOfConfig":"88"},{"size":1287,"mtime":1616800969014,"results":"135","hashOfConfig":"88"},{"size":2064,"mtime":1616800970072,"results":"136","hashOfConfig":"88"},{"size":1915,"mtime":1616800969196,"results":"137","hashOfConfig":"88"},{"size":380,"mtime":1616800969955,"results":"138","hashOfConfig":"88"},{"size":1792,"mtime":1616800969122,"results":"139","hashOfConfig":"88"},{"size":1243,"mtime":1616800970185,"results":"140","hashOfConfig":"88"},{"size":1344,"mtime":1616800969425,"results":"141","hashOfConfig":"88"},{"size":1208,"mtime":1612635918959,"results":"142","hashOfConfig":"88"},{"size":1798,"mtime":1616800969370,"results":"143","hashOfConfig":"88"},{"size":1477,"mtime":1616800970323,"results":"144","hashOfConfig":"88"},{"size":1381,"mtime":1616800970478,"results":"145","hashOfConfig":"88"},{"size":602,"mtime":1616800970540,"results":"146","hashOfConfig":"88"},{"size":2750,"mtime":1616890443573,"results":"147","hashOfConfig":"88"},{"size":1381,"mtime":1616800970452,"results":"148","hashOfConfig":"88"},{"size":342,"mtime":1616800970530,"results":"149","hashOfConfig":"88"},{"size":0,"mtime":1612807806557,"results":"150","hashOfConfig":"88"},{"size":511,"mtime":1616886943526,"results":"151","hashOfConfig":"88"},{"size":9100,"mtime":1617125477502,"results":"152","hashOfConfig":"88"},{"size":927,"mtime":1617111511876,"results":"153","hashOfConfig":"88"},{"size":248,"mtime":1617111460630,"results":"154","hashOfConfig":"88"},{"size":466,"mtime":1617111548080,"results":"155","hashOfConfig":"88"},{"size":399,"mtime":1617111545216,"results":"156","hashOfConfig":"88"},{"size":1234,"mtime":1616800970217,"results":"157","hashOfConfig":"88"},{"size":1462,"mtime":1616800969768,"results":"158","hashOfConfig":"88"},{"size":1251,"mtime":1617125664693,"results":"159","hashOfConfig":"88"},{"size":2069,"mtime":1616800970635,"results":"160","hashOfConfig":"88"},{"size":543,"mtime":1617061801454,"results":"161","hashOfConfig":"88"},{"size":1202,"mtime":1617111091640,"results":"162","hashOfConfig":"88"},{"size":666,"mtime":1617125271214,"results":"163","hashOfConfig":"88"},{"size":1998,"mtime":1617118252708,"results":"164","hashOfConfig":"88"},{"size":2477,"mtime":1617125836554,"results":"165","hashOfConfig":"88"},{"size":1389,"mtime":1616800969340,"results":"166","hashOfConfig":"88"},{"size":2826,"mtime":1617116319696,"results":"167","hashOfConfig":"88"},{"size":1858,"mtime":1616800969527,"results":"168","hashOfConfig":"88"},{"size":2371,"mtime":1616893856833,"results":"169","hashOfConfig":"88"},{"size":3321,"mtime":1617128459976,"results":"170","hashOfConfig":"88"},{"size":756,"mtime":1616887735599,"results":"171","hashOfConfig":"88"},{"size":1243,"mtime":1616951545513,"results":"172","hashOfConfig":"88"},{"size":537,"mtime":1616864227012,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"s6bm0c",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"176"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"176"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"176"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"176"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"176"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"176"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"176"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"362"},"C:\\Users\\aamir\\mainp\\portp\\src\\index.js",[],["363","364"],"C:\\Users\\aamir\\mainp\\portp\\src\\App.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\reportWebVitals.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\landing-page\\Landing-page.js",["365"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { changeStatus } from \"../../redux/profile/profile.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\n\nimport \"./Landing-page.scss\";\n\nfunction LandingPage({ currentUser, changeStatus }) {\n  useEffect(() => {\n    if (currentUser !== null) {\n      changeStatus(currentUser.profileId, \"online\");\n    }\n  }, []);\n\n  const shop =\n    \"https://cdn.pixabay.com/photo/2017/06/21/20/51/tshirt-2428521_960_720.jpg\";\n  const chat =\n    \"https://firebasestorage.googleapis.com/v0/b/tada-proj.appspot.com/o/images%2Fprofile1.041490457294241?alt=media&token=ad802569-4766-419e-87ad-6ef6aa65b685\";\n\n  return (\n    <div>\n      <div className=\"Landing-page-container\">\n        <div className=\"landing-page-box\">\n          <Link to=\"/store\">\n            <h1 className=\"landing-page-title\">Enter The Store</h1>\n            <div\n              className=\"landing-page-links\"\n              style={{ backgroundImage: `url(${shop})` }}\n            ></div>\n          </Link>\n        </div>\n\n        <div className=\"landing-page-box\">\n          <Link to=\"/chatapp\">\n            <h1 className=\"landing-page-title\">Enter the Chatapp</h1>\n            <div\n              className=\"landing-page-links\"\n              style={{ backgroundImage: `url(${chat})` }}\n            ></div>\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"landing-page-text-contaier\">\n        <p className=\"landing-page-text\">\n          <a\n            className=\"landing-page-cv\"\n            href=\"https://drive.google.com/file/d/1z_376bSQJU7L9ihEX8qMxCzHvRnbbtNc/view?usp=sharing\"\n          >\n            CV\n          </a>\n          <a\n            className=\"landing-page-github\"\n            href=\"https://github.com/amdat99?tab=repositories\"\n          >\n            Github\n          </a>\n          <br></br>\n          <span style={{color: 'red'}}>*Somebody seems to sending 1000's of requests to the firebase server in a few minutes which is exausting the free 50k limit. For now I've set read access to users only.To access all features please quickly register an account or signin. The DDOSer is exceeding the signin limits of the test account. Sorry if the firebase limits are exceeded. See my github for code implementations. </span>\n          \n          <br></br>I have created a featured store application where users can\n          buy and sell items aswell as a chatapp which allows users to send\n          messages and images. The chatapp also features direct messaging done\n          through user profiles where users can also upload profile images. There \n          are also live chatroom utilisng Web Sockets achieved withthrough socket-io.\n          State management is handled throughout with redux and redux sagas for\n          requests. The backend for the store is handled with firestore. The\n          chatapp uses postgres with an express server providing connectivity\n          with Knex. Stripe and accuweather Api's are also called in the server\n          and implemented in the front-end. Some testing done with jest and\n          enzyme. Application is a Pogressive web-app. Redux-logger kept as a\n          dependency to show state management.\n        </p>\n      </div>\n    </div>\n  );\n}\nconst mapDispatchToProps = (dispatch) => ({\n  changeStatus: (profileId, status) =>\n    dispatch(changeStatus({ profileId, status })),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\navigation-shared\\Navigation-shared.js",["366"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import {ReactComponent as Logo } from '../../assets/logo.png'\nimport ProfileIcon from \"../profile-icon/Profile-icon\";\n\nimport ChatRoom from \"../../pages/chat-room/Chat-Room\";\n\nimport { Route } from \"react-router-dom\";\n\nimport \"./Navigation-shared.scss\";\n\nfunction NavigationShared({}) {\n  return (\n    <div>\n      <Route path=\"/chatroom\" component={ChatRoom} />\n\n      <div className=\"nav-shared-container\">\n        <div className=\"nav-shared-logo\">\n          <Link to=\"/\">\n            <img\n              src=\"https://cdn.pixabay.com/photo/2016/08/25/07/30/orange-1618917_960_720.png\"\n              height=\"30\"\n              width=\"30\"\n              alt=\"logo\"\n            />\n          </Link>\n          <div className=\"nav-shared-profileicon\">\n            <ProfileIcon />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationShared;\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-icon\\Profile-icon.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\store-page\\Store-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-page\\Chat-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\store-page-directory\\Store-page-directory.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-menu\\Shop-menu.js",[],["367","368"],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shop-header\\Shop-header.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\store.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\signon-page\\Signon.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\root-saga.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\Firebase.js",[],["369","370"],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\header\\header.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\firebase\\firebase.js",["371"],"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyCCUAnG030Pik83ErdX3DyHBqypx0qTM1A\",\n  authDomain: \"aamir-project-492ef.firebaseapp.com\",\n  projectId: \"aamir-project-492ef\",\n  storageBucket: \"aamir-project-492ef.appspot.com\",\n  messagingSenderId: \"926729331205\",\n  appId: \"1:926729331205:web:623421273d59ce346ff26c\",\n  measurementId: \"G-KGV9XG51P2\"\n};\n\n//user functions:\nexport const createUserProfileDoc = async (userData, additionalData) => {\n  // handles google and emailsignin\n  if (!userData) return;\n  const profileId = Math.random() + Math.random();\n  const profileRef = firestore.doc(`profile/${profileId}`);\n  const messageRef = firestore.doc(`messages/${profileId}`);\n  const userRef = firestore.doc(`users/${userData.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    // createes new user info\n    const { displayName, email, senderName, message } = userData;\n    const createdAt = new Date();\n\n    const status = \"\";\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n\n      await profileRef.set({\n        displayName,\n        createdAt,\n        profileId,\n        status,\n        ...additionalData,\n      });\n      await messageRef.set({\n        displayName,\n        createdAt,\n        senderName,\n        message,\n        profileId,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error(\"error creating new user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const updateDisplayName = async (profileId, name) => {\n  if (!profileId) return;\n  firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ displayName: name });\n      });\n    });\n};\n\nexport const updateDisplayNameforUsers = async (userId, name) => {\n  firestore.collection(\"users\").doc(userId).update({ displayName: name });\n};\n\nexport const updateStatus = async (profileId, status) => {\n  await firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId)\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.update({ status: status });\n      });\n    });\n};\n\nexport const getProfileDoc = async (profileId) => {\n  const collectionRef = firestore.collection(\"profile\");\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      profileId: doc.data().profileId,\n      displayName: doc.data().displayName,\n      status: doc.data().status,\n    };\n  });\n};\n\nexport const getProfileName = async (profileId) => {\n  const collectionRef = firestore\n    .collection(\"profile\")\n    .where(\"profileId\", \"==\", profileId);\n  // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return { displayName: doc.data().displayName };\n  });\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    // cheks to see if user is signedin\n    const unsubscribe = auth.onAuthStateChanged((userData) => {\n      //if sign in state changes\n      unsubscribe(); //unsubscribe/closes session\n      resolve(userData);\n    }, reject);\n  });\n};\n\n//messaging functions:\n\nexport const setMessageDoc = async (messageData) => {\n  const uid = Math.random() + Math.random();\n  const collectionRef = firestore.doc(`message/${uid}`);\n  const {\n    senderId,\n    message,\n    senderName,\n    recieverName,\n    recieverId,\n  } = messageData;\n  const createdAt = new Date().toDateString();\n\n  try {\n    await collectionRef.set({\n      message,\n      recieverId,\n      senderName,\n      recieverName,\n      createdAt,\n      senderId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\nexport const getRecievedMessageDoc = async (recieverId) => {\n  if (!recieverId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"recieverId\", \"==\", recieverId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      senderName: doc.data().senderName,\n      recieverName: doc.data().recieverName,\n      message: doc.data().message,\n      createdAt: doc.data().createdAt,\n      senderId: doc.data().senderId,\n      dateFilter: Date.parse(doc.data().createdAt),\n    };\n  });\n};\n\nexport const getSentMessageDoc = async (senderId) => {\n  if (!senderId) return;\n  const collectionRef = firestore\n    .collection(\"message\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"senderId\", \"==\", senderId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      message: doc.data().message,\n      createdAt: doc.data().createdAt,\n      senderId: doc.data().senderId,\n      dateFilter: Date.parse(doc.data().createdAt),\n      recieverName: doc.data().recieverName,\n    };\n  });\n};\n\n// shop functions:\nexport const setItemsDoc = async (itemData) => {\n  const productId = itemData.productId + Math.random();\n  const collectionRef = firestore.doc(`items/${productId}${itemData.userId}}`);\n  const {\n    price,\n    category,\n    soldBy,\n    picture,\n    description,\n    userId,\n    name,\n  } = itemData;\n\n  const createdAt = new Date();\n\n  try {\n    await collectionRef.set({\n      name,\n      price,\n      category,\n      soldBy,\n      picture,\n      description,\n      userId,\n      createdAt,\n      productId,\n    });\n  } catch (error) {\n    console.error(\"error creating new listing\", error.message);\n  }\n};\n\n// export const setItemsHistoryDoc = async ( itemData) =>{\n\n//   const collectionRef = firestore.doc(`itemshistory/${itemData.productId}${itemData.userId}}`)\n//   const name = itemData.name.toLowerCase();\n//   const {  price, category, soldBy, picture, description,userId,name} = itemData;\n//   const createdAt = new Date ();\n//   const productId = itemData.productId+Math.random()\n// try{\n//   await collectionRef.set({\n//     name, price, category, soldBy, picture, description, userId,\n//     createdAt,productId,\n//   })\n// } catch(error){\n//   console.error('error creating new listing', error.message);\n// }\n\n// }\n\nexport const getItemsDoc = async (collection) => {\n  if (!collection) return;\n  const collectionRef = firestore.collection(collection); // get user collection data\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getSellingItemsDoc = async (profileId) => {\n  if (!profileId) return;\n  const collectionRef = firestore\n    .collection(\"items\")\n    .where(\"userId\", \"==\", profileId);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const deleteListing = async (userId, productId) => {\n  if (!userId) return;\n  const deleteRef = firestore\n    .collection(\"items\")\n    .where(\"productId\", \"==\", productId)\n    .where(\"userId\", \"==\", userId);\n  deleteRef.get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      doc.ref.delete();\n    });\n  });\n};\n\nexport const getCategoryDoc = async (collection, category) => {\n  if (!collection) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"category\", \"==\", category);\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\nexport const getProductDoc = async (collection, productId) => {\n  if (!productId) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"productId\", \"==\", productId);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getListedProductDoc = async (collection, soldBy) => {\n  if (!soldBy) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"soldBy\", \"==\", soldBy);\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => doc.data());\n};\n\nexport const getSearchFilteredDoc = async (collection, name) => {\n  if (!name) return;\n  const collectionRef = firestore\n    .collection(collection)\n    .where(\"name\", \">=\", name)\n    .where(\"name\", \"<=\", name + \"\\uf8ff\");\n\n  const collectionSnapShot = await collectionRef.get(); //\n  return collectionSnapShot.docs.map((doc) => {\n    return {\n      name: doc.data().name,\n      price: doc.data().price,\n      category: doc.data().category,\n      soldBy: doc.data().soldBy,\n      picture: doc.data().picture,\n      description: doc.data().description,\n      createdAt: doc.data().createdAt,\n      profileId: doc.data().productId,\n    };\n  });\n};\n\n//profile picture functions:\nexport const uploadImageToStorage = (profileimage, profileId) => {\n  if (!profileimage || !profileId) return;\n\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  let file = profileimage[0];\n  let uploadTask = imageRef.put(file);\n\n  if (imageRef.exists) {\n    // delete previous profile image\n    imageRef.delete();\n    return uploadImage(uploadTask);\n  }\n\n  return uploadImage(uploadTask);\n};\n\nconst uploadImage = (uploadTask) => {\n  try {\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, () => {\n      let downloadURL = uploadTask.snapshot.downloadURL;\n    });\n  } catch (error) {\n    console.error(\"error uploading new image\", error.message);\n  }\n};\n\nexport const getImage = async (profileId) => {\n  const imageRef = firebase.storage().ref().child(`images/profile${profileId}`);\n  const image = await imageRef.getDownloadURL();\n  try {\n    return image;\n  } catch (error) {\n    console.error(\"error\", error.message);\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nexport const googleHandler = new firebase.auth.GoogleAuthProvider(); //handle signin prompt\ngoogleHandler.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleHandler);\n\nexport default firebase;\n","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\shared-header\\Shared-header.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signin.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\signin&signup\\Signup.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\list-item\\List-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\add-items\\Add-items.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-filter-page\\Product-filter-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\shop\\shop.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\items-collection\\Items-collection.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\search-box\\Search-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-dropdown.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\cart\\cart.utils.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-button.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\cart\\Cart-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\checkout-page\\Checkout-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\checkout-item\\Checkout-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\category\\Category-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\categories\\Categories.js",["372"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  isCategoryDataLoaded,\n  selectCategory,\n} from \"../../redux/shop/shop.selectors\";\nimport ItemsCollection from \"../items-collection/Items-collection\";\n\nimport ShopHeader from \"../../components/shop-header/Shop-header\";\n\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCategoryPending } from \"../../redux/shop/shop.actions\";\n\nimport \"./Categories.scss\";\nexport function Categories({\n  match,\n  isLoaded,\n  categoryItems,\n  fetchCategoryPending,\n}) {\n  const [categoryList] = useState([\n    \"clothes\",\n    \"shoes\",\n    \"electronics\",\n    \"food\",\n    \"general\",\n  ]);\n\n  useEffect(() => {\n    categoryList.map((category) => {\n      if (match.url === \"/category/\" + category) {\n        return fetchCategoryPending(category);\n      }\n    });\n  }, [match, fetchCategoryPending, categoryList]);\n\n  return (\n    <div>\n      <ShopHeader />\n\n      <div>\n        <h1 id=\"categories-title\"> {match.params.categoryId}</h1>\n        {isLoaded ? (\n          <div id=\"categories-container\">\n            {categoryItems.map((item, i) => (\n              <ItemsCollection\n                key={i}\n                item={item}\n                className=\"collection-item\"\n              />\n            ))}\n          </div>\n        ) : (\n          <h1>loading...</h1>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  categoryItems: selectCategory,\n  isLoaded: isCategoryDataLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCategoryPending: (category) => dispatch(fetchCategoryPending(category)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Categories)\n);\n","C:\\Users\\aamir\\mainp\\portp\\src\\pages\\product-page\\Product-page.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\product-item\\Product-item.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\item-preview\\Items-preview.js",["373","374"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {addItem} from '../../redux/cart/cart.actions'\r\nimport {toggleCartHidden}  from '../../redux/cart/cart.actions'\r\nimport { fetchProductPending } from '../../redux/shop/shop.actions'\r\nimport './Item-preview.scss'\r\n\r\nfunction ItemPreview({item,fetchProductPending,history}) {\r\nconst {name,price,picture,productId} = item;\r\n\r\n    return (\r\n     \r\n         <div id='item-preview-container' >\r\n\r\n         {/* <Link to='/productpage'> */}\r\n         <div id='item-preview-overlay' >\r\n         <img id ='item-image' src ={picture} alt='item' width='100' height='100'\r\n         onClick={() => { fetchProductPending(productId); \r\n         history.push('/product') } }/>\r\n           \r\n            <span id='item-preview-name'>{name}</span>\r\n            <span id='item-preview-price'>£{price}</span>\r\n            </div>  \r\n            {/* </Link> */}\r\n           </div>    \r\n\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProductPending: (productId) => dispatch(fetchProductPending(productId)),\r\n})\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(ItemPreview));\r\n",["375","376"],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\message-box\\Message-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\providers\\message\\message.provider.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\messages\\messages.utils.js",[],["377","378"],"C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile.js",["379","380"],"import React, { useState, useEffect, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { toggleModal, toggleMessageBox } from \"../../redux/modal/modal.actions\";\nimport { fetchProfileImagePending } from \"../../redux/profile/profile.actions\";\n// import { selectProfileName } from '../../redux/profile/profile.selectors'\nimport { createStructuredSelector } from \"reselect\";\nimport { selectToggledModal, selectMessageBox } from \"../../redux/modal/modal.selectors\";\nimport {\n  selectCurrentUser,\n  selectRecievedMessages,\n  selectSentMessages,\n} from \"../../redux/user/user.selectors\";\nimport {\n  getRecievedMessagePending,\n  getSentMessagePending,\n} from \"../../redux/user/user.actions\";\nimport { selectCurrentImage, selectReceiverInfo } from \"../../redux/profile/profile.selectors\";\nimport {\n  uploadImageToStorage,\n  getSentMessageDoc,\n  updateDisplayName,\n  updateDisplayNameforUsers,\n  getProfileName,\n} from \"../../firebase/firebase\";\nimport {\n  selectSellingItems,\n  isSellingItemsLoaded,\n} from \"../../redux/shop/shop.selectors\";\nimport {\n  fetchSellingItemsPending,\n  fetchProductPending,\n} from \"../../redux/shop/shop.actions\";\n\nimport DirectMessagingBox from \"../../components/direct-messaging-box/Direct-messaging-box\";\n\nimport \"./Profile.scss\";\n\nconst CartDropdown = React.lazy(() =>\n  import(\"../../components/cart/Cart-dropdown\")\n);\nconst ListedItems = React.lazy(() =>\n  import(\"../../components/listed-items/Listed-items\")\n);\nconst ProfileIconDropdown = React.lazy(() => import(\"./Profile-icon-dropdown\"));\nconst ProfileMessages = React.lazy(() =>\n  import(\"../../components/profile-messages/Profile-messages\")\n);\n\nfunction Profile({\n  toggleModal,\n  currentUser,\n  currentImage,\n  getProfileImage,\n  fetchSellingItemsPending,\n  sellingItems,\n  selectMessageBox,\n  fetchProductPending,\n  toggleMessageBox,\n  profileName,\n  selectReceiverInfo\n}) {\n  const [uploadDropdown, setUploadDropdown] = useState(false);\n  const [shopToggle, setShopToggle] = useState(false);\n  const [recievedMessages] = useState([]);\n  const [sentMessages, setSentMessages] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [displayNameData, setDisplayNameData] = useState(\"\");\n\n  useEffect(() => {\n    if (currentUser) {\n      getProfileImage(currentUser.profileId);\n    }\n  }, [currentUser, getProfileImage]);\n  //eslint-disable\n\n  useEffect(() => {\n    fetchProfileName();\n  }, [getProfileName]);\n  //eslint-disable\n\n  useEffect(() => {\n    if (currentUser) {\n      getSentMessages();\n\n      const interval = setInterval(() => getSentMessages(), 5000);\n      return () => clearInterval(interval);\n    } //eslint-disable\n  }, [getSentMessageDoc, currentUser, sentMessages]);\n\n  useEffect(() => {\n    fetchSellingItemsPending(currentUser.profileId);\n  }, [fetchSellingItemsPending, currentUser]);\n  //eslint-disable\n\n  const toggleDropdown = () => {\n    setUploadDropdown(!uploadDropdown);\n  };\n  \n \n  console.log('r',selectReceiverInfo)\n  \n\n  const fetchProfileName = async () => {\n    <span\n      id=\"profile-update-name\"\n      type=\"button\"\n      onClick={() => {\n        onUpdateName();\n        toggleModal();\n      }}\n    >\n      update name\n    </span>;\n    const request = await getProfileName(currentUser.profileId);\n    setDisplayNameData(request);\n  };\n\n  const toggleShopFeatures = () => {\n    setShopToggle(!shopToggle);\n  };\n\n  const getSentMessages = async () => {\n    const request = await getSentMessageDoc(currentUser.profileId);\n    await setSentMessages(request);\n  };\n\n  const onNameChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const onUpdateName = () => {\n    updateDisplayName(currentUser.profileId, userName);\n    updateDisplayNameforUsers(currentUser.id, userName);\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <span>{selectReceiverInfo}ddddd</span>\n      { selectMessageBox\n     ? <DirectMessagingBox  receiverInfo = {selectReceiverInfo}/>\n   :null}\n      {currentUser ? (\n        <div>\n          <button id=\"profile-shop-button\" onClick={toggleShopFeatures}>\n            Toggle Profile\n          </button>\n          <div>\n            <div id=\"profile-image-container\">\n              <a href={currentImage}>\n                <img\n                  src={`${currentImage}size=60x60`}\n                  alt=\"profile\"\n                  width=\"60\"\n                  height=\"60\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src =\n                      \"https://cdn.pixabay.com/photo/2016/08/25/07/30/orange-1618917_960_720.png\";\n                  }}\n                />\n              </a>\n            </div>\n            <span onClick={toggleDropdown} id=\"profile-image-update\">\n              update Image\n            </span>\n            <Suspense fallback={<div className=\"loader\"></div>}>\n              {uploadDropdown ? (\n                <div id=\"profile-image-update-dropdown\">\n                  <ProfileIconDropdown\n                    uploadImageToStorage={uploadImageToStorage}\n                    currentUser={currentUser}\n                    toggleModal={toggleModal}\n                    currentImag={currentImage}\n                    getProfileImage={getProfileImage}\n                  />\n                </div>\n              ) : null}\n            </Suspense>\n            <form\n              onSubmit={() => {\n                onUpdateName();\n                toggleModal();\n              }}\n            >\n              {displayNameData\n                ? displayNameData.map((name) => (\n                    <input\n                      id=\"profile-greeting\"\n                      type=\"text\"\n                      placeholder={\"Hello \" + name.displayName}\n                      onChange={onNameChange}\n                      required\n                      aria-label=\"change displa name\"\n                      label=\"name\"\n                    />\n                  ))\n                : null}\n              <button id=\"profile-update-name\" type=\"submit\">\n                update name\n              </button>\n            </form>\n          </div>\n          <Suspense fallback={<div className=\"loader\"></div>}>\n            {shopToggle ? (\n              <div>\n                <div id=\"profile-cart\">\n                  <CartDropdown />\n                </div>{\" \"}\n                <div className=\"profile-selling-items hide-scroll\">\n                  {sellingItems.length ? (\n                    sellingItems.map((sellingItem) => (\n                      <div>\n                        <ListedItems\n                          sellingItem={sellingItem}\n                          key={sellingItem.userId}\n                          fetchProductPending={fetchProductPending}\n                          toggleModal={toggleModal}\n                        />\n                      </div>\n                    ))\n                  ) : (\n                    <h1 id=\"profile-nosell\">you are selling no items</h1>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div className=\"profile-messagebox-container hide-scroll \">\n                {\" \"}\n                {currentUser ? (\n                  <div>\n                    <span style={{ position: \"relative\", right: \"-10px\" }}>\n                      messages:\n                    </span>\n                    <ProfileMessages\n                      sentMessages={sentMessages}\n                      currentUser={currentUser}\n                      recievedMessages={recievedMessages}\n                    />\n                  </div>\n                ) : (\n                  <h1>no messages...</h1>\n                )}{\" \"}\n              </div>\n            )}\n            <div></div>\n          </Suspense>\n        </div>\n      ) : (\n        <Link to=\"/signon\" onClick={toggleModal}>\n          sign in to view profile\n        </Link>\n      )}\n      <button id=\"profile-modal-button\" onClick={()=>{toggleModal(); toggleMessageBox() }}>\n        X\n      </button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProfileImage: (profileId) => dispatch(fetchProfileImagePending(profileId)),\n  toggleModal: () => dispatch(toggleModal()),\n  fetchSellingItemsPending: (userId) =>\n    dispatch(fetchSellingItemsPending(userId)),\n  getRecievedMessagePending: (profileId) =>\n    dispatch(getRecievedMessagePending(profileId)),\n  getSentMessagePending: (userId) => dispatch(getSentMessagePending(userId)),\n  fetchProductPending: (productId) => dispatch(fetchProductPending(productId)),\n  toggleMessageBox: () => dispatch(toggleMessageBox()),\n  \n});\n\nconst mapStateToProps = createStructuredSelector({\n  selectToggledModal: selectToggledModal,\n  currentUser: selectCurrentUser,\n  currentImage: selectCurrentImage,\n  sellingItems: selectSellingItems,\n  isSellingItemsLoaded: isSellingItemsLoaded,\n  recievedMessages: selectRecievedMessages,\n  sentMessages: selectSentMessages,\n  selectReceiverInfo: selectReceiverInfo,\n  selectMessageBox: selectMessageBox\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\modal\\modal.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\profile\\Profile-icon-dropdown.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\stripe-button\\Stripe-button.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.reducer.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.sagas.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.types.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.actions.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\redux\\profile\\profile.selectors.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Users-sidebar.js",["381","382"],"import React, { useEffect, useState } from \"react\";\nimport SidebarContent from \"./Sidebar-content\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectProfileInfo } from \"../../redux/profile/profile.selectors\";\nimport { getReceiverInfo } from \"../../redux/profile/profile.actions\"\nimport { toggleMessageBox, openModal} from \"../../redux/modal/modal.actions\";\n\nimport \"./Users-sidebar.scss\";\n\nfunction UsersSidebar({\n  getProfileInfo,\n  profilesInfo,\n  searchField,\n  currentUser,\n  render,\n  getReceiverInfo,\n  openModal,\n  toggleMessageBox\n}) {\n  const [profiles] = useState(profilesInfo);\n\n  const filteredName = () => {\n    console.log(\"p\", profilesInfo);\n    return profilesInfo.filter((profile) => {\n      return profile.displayName\n        .toLowerCase()\n        .includes(searchField.toLowerCase());\n    });\n  };\n\n  return (\n    <div className=\"sidebar-container hide-scroll\">\n    \n        <div className=\"sidebar-test-profile\">\n          <h4>Test Profile</h4>\n          <span id=\"sidebar-test\">email: john@gmail.com password: 123456 </span>\n    \n        </div>\n\n      {profilesInfo\n        ? filteredName().map((data, i) => (\n            <SidebarContent\n              key={i}\n              data={data}\n              openModal={openModal}\n              currentUser={currentUser}\n              getReceiverInfo= {getReceiverInfo}\n              toggleMessageBox = {toggleMessageBox}\n            />\n          ))\n        : null}\n    </div>\n  );\n}\nconst mapDispatchToProps = (dispatch) => ({\n  openModal: () => dispatch(openModal()),\n  getReceiverInfo: (profileData) => dispatch(getReceiverInfo(profileData)),\n  toggleMessageBox: () => dispatch(toggleMessageBox())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  profilesInfo: selectProfileInfo,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSidebar);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\users-sidebar\\Sidebar-content.js",["383","384","385"],"import React, { useState, useEffect } from \"react\";\nimport DirectMessagingBox from \"../direct-messaging-box/Direct-messaging-box\";\n\nfunction SidebarContent({ data, openModal, currentUser, getReceiverInfo, toggleMessageBox }) {\n  const [messageDropdown, setMessageDropdown] = useState(false);\n  const [sendMessage, setSendMessage] = useState(true)\n  const [profileInfo, setProfileInfo] = useState({recieverId:'' ,recieverName:''})\n\n  useEffect(() => {\n    setProfileInfo({recieverId:data.profileId , recieverName:data.displayName})\n\n  },[setProfileInfo])\n\n  const toggleDropdown = () => {\n    setMessageDropdown(!messageDropdown);\n  };\n\n  const sendProfileInfo = async () => {\n  \n    await getReceiverInfo(profileInfo)\n    toggleMessageBox()\n\n  }\n\n  const toggleSendMessage = () => {\n    setSendMessage(!sendMessage);\n  };\n\n  return (\n    <div onMouseEnter={toggleDropdown} onMouseLeave={toggleDropdown}>\n     \n        <div>\n          \n          <img\n            src={`https://firebasestorage.googleapis.com/v0/b/aamir-project-492ef.appspot.com/o/images%2Fprofile${data.profileId}?alt=media&token=fecd18b0-6c70-47fb-a1b1-fb4966943b18`}\n            alt=\"profile icon\"\n            width=\"60\"\n            height=\"60\"\n            className=\"sidebar-images\"\n            onError={(e) => {\n              e.target.onerror = null;\n              e.target.src =\n                \"https://cdn.pixabay.com/photo/2016/08/25/07/30/orange-1618917_960_720.png\";\n            }}\n          />\n          {data.status === \"online\" ? (\n            <span className=\"sidebar-online\">Signed in</span>\n          ) : (\n            <span className=\"sidebar-offline\">offline</span>\n          )}\n          <span className=\"sidebar-name\">{data.displayName}</span>\n          {messageDropdown ? (\n            <div>{\n              <div>\n                \n                  \n\n                <div>\n                { currentUser ? \n               <span onClick={()=>{sendProfileInfo(); openModal()}}>Send Message</span>\n                :<span onClick={()=> alert('sign in to send a message')}>send Message</span>}\n            \n               </div>\n{/*           \n              //   profileId={data.profileId}\n              //   displayName={data.displayName}\n              //   toggleModal={toggleModal}\n              // /> */}\n            \n                \n              </div>\n            }\n            </div>\n          ) : null}\n        </div>\n      \n    </div>\n  );\n}\n\nexport default React.memo(SidebarContent);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\listed-items\\Listed-items.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\direct-messaging-box\\Direct-messaging-box.js",["386"],"import React, { useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchProfileInfoPending } from \"../../redux/profile/profile.actions\";\nimport { sendDirectMessagePending } from \"../../redux/user/user.actions\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectProfileInfo, selectReceiverInfo } from \"../../redux/profile/profile.selectors\";\nimport { openModal } from \"../../redux/modal/modal.actions\";\n\nimport { setMessageDoc } from \"../../firebase/firebase\";\nimport \"./Direct-messaging-box.scss\";\n\nfunction DirectMessagingBox({\n  currentUser,\n  profilesInfo,\n  getProfileInfo,\n  profileId,\n  displayName,\n  sendDirectMessagePending,\n  openModal,\n  recieverInfo\n}) {\n  const [messageData, setMessageData] = useState({\n    message: \"\",\n    senderName: \"\",\n    senderId: \"\",\n    recieverName: \"\",\n    recieverId: \"\",\n  });\n\n\n  useEffect(() => {\n    getProfileInfo();\n  }, [getProfileInfo]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setMessageData({\n        senderName: currentUser.displayName,\n        senderId: currentUser.profileId,\n        recieverId: recieverInfo.profileId,\n        recieverName: recieverInfo.displayName,\n      });\n    }\n  }, [currentUser, displayName, profileId]);\n\n  const onMessage = (event) => {\n    setMessageData({ ...messageData, message: event.target.value });\n    console.log(messageData);\n  };\n\n  console.log(recieverInfo)\n  const onSend = async (event) => {\n    event.preventDefault();\n    if (currentUser.profileId !== profileId) {\n      setMessageDoc(messageData);\n      setMessageData({\n        senderName: currentUser.displayName,\n        senderId: currentUser.profileId,\n        recieverId: profileId,\n        message: \"\",\n        recieverName: displayName,\n      });\n    } else alert(\"dont send yourself a message please\");\n  };\n\n  return (\n    <div className=\"direct-messaging-container\">\n      <form onSubmit={onSend}>\n        <textarea\n          id=\"direct-messaging-input\"\n          onFocus={openModal}\n          onChange={onMessage}\n          placeholder=\"type message\"\n          required\n        ></textarea>\n        <button id=\"direct-messaging-button\" type=\"submit\">\n          send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProfileInfo: (messageData) =>\n    dispatch(fetchProfileInfoPending(messageData)),\n  sendDirectMessagePending: (messageData) =>\n    dispatch(sendDirectMessagePending(messageData)),\n  openModal: () => dispatch(openModal()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  profilesInfo: selectProfileInfo,\n  currentUser: selectCurrentUser,\n  recieverInfo: selectReceiverInfo\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectMessagingBox);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\profile-messages\\Profile-messages.js",["387","388"],"import React, { useState, useEffect } from \"react\";\nimport {\n  getRecievedMessageDoc,\n  getSentMessageDoc,\n} from \"../../firebase/firebase\";\n\nimport \"./Profile-messages.scss\";\n\nfunction ProfileMessages({ currentUser }) {\n  const [recievedMessages, setRecievedMessages] = useState([]);\n  const [sentMessages, setSentMessages] = useState([]);\n\n  useEffect(() => {\n    getRecievedMessages();\n    const interval = setInterval(() => getRecievedMessages(), 5000);\n    return () => clearInterval(interval);\n  }, [recievedMessages]);\n  //eslint-disable\n\n  useEffect(() => {\n    getSentMessages();\n    const interval = setInterval(() => getSentMessages(), 5000);\n    return () => clearInterval(interval);\n  }, [sentMessages]);\n  //eslint-disable\n\n  const getRecievedMessages = async () => {\n    const request = await getRecievedMessageDoc(currentUser.profileId);\n    setRecievedMessages(request);\n  };\n\n  const getSentMessages = async () => {\n    const request = await getSentMessageDoc(currentUser.profileId);\n    setSentMessages(request);\n  };\n\n  return (\n    <div className=\"profile-messages-container\">\n      {recievedMessages.map((sentMessage, i) => (\n        <ul key={i} id=\"message-box-container\">\n          <span> {sentMessage.senderName}:</span>\n          <span id=\"message-box-message\"> {sentMessage.message} </span>\n          <span id=\"profile-messages-recieved-date\">\n            {sentMessage.createdAt}\n          </span>\n        </ul>\n      ))}\n      {sentMessages.map((message, i) => (\n        <ul key={i} id=\"message-box-container\">\n          <span id=\"profile-messages-sent\"> {message.message} </span>\n          <span id=\"profile-messages-sent-date\">\n            to {message.recieverName} {message.createdAt}{\" \"}\n          </span>\n          <span></span>\n        </ul>\n      ))}\n      )\n    </div>\n  );\n}\n\nexport default React.memo(ProfileMessages);\n","C:\\Users\\aamir\\mainp\\portp\\src\\components\\weather-box\\Weather-box.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\pages\\chat-room\\Chat-Room.js",["389","390","391"],"import React, { useState, useEffect } from \"react\";\nimport ChatRoomContent from \"../../components/chat-room-content/Chat-room-content\";\nimport {\n  initiateSocket,\n  disconnectSocket,\n  enterChat,\n  sendMessage,\n} from \"../../sockets/sockets\";\n\nimport {Link} from 'react-router-dom'\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport './Chat-room.scss'\n\nlet socket;\n\nfunction ChatRoom({ currentUser }) {\n  const [createRoom, setCreateRoom] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n  const [room, setRoom] = useState(rooms[0]);\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [onName, setOnName] = useState(\"\");\n\n  useEffect(() => {\n    fetchRooms();\n\n   \n    if (currentUser) {\n      setName(currentUser.displayName);\n    }\n\n    \n  }, [currentUser, room,name,onName]);\n\n  useEffect(() => {\n    if (room) initiateSocket(room);\n    if(room === undefined){\n      setRoom(rooms[0]);\n      }\n\n    enterChat((err, data) => {\n      if (err) return;\n      setChat((existingdata) => [data, ...existingdata]);\n    });\n    return () => {\n      disconnectSocket();\n    };\n  });\n\n  const fetchRooms = () => {\n    fetch(\"https://aamirproject-api.herokuapp.com/fetchrooms\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setRooms(data);\n        if(room === undefined){\n          setRoom(rooms[0]);\n          }\n      });\n  };\n\n  const addName = () => {\n    setName(onName);\n  };\n\n  const addRoom = () => {\n    if (createRoom) {\n      sendRoom();\n      fetchRooms();\n      setCreateRoom('');\n    }\n  };\n  const sendRoom = async () => {\n    fetch(\"https://aamirproject-api.herokuapp.com/addroom\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        room: createRoom,\n      }),\n    });\n    fetchRooms();\n    setChatHistory(chat);\n    setChat([...chat, chatHistory]);\n  };\n\n  const handleInput = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const getRoomInput = (event) => {\n    setCreateRoom(event.target.value);\n  };\n\n  return (\n    <div className=\"chatroom-container\">\n      <Link to ='chatapp' id='chatroom-link' >ChatApp</Link>\n      {!name ? (\n        <div id=\"chatroom-input\">\n          <input\n            type=\"text\"\n            onChange={(e) => setOnName(e.target.value)}\n            placeholder=\"enter username\"\n          />\n          <button onClick={addName}>add name</button>\n        </div>\n      ) : (\n        <div>\n          <span>room: {room}</span>\n          <ChatRoomContent\n            rooms={rooms}\n            chat={chat}\n            addRoom={addRoom}\n            getRoomInput={getRoomInput}\n            handleInput={handleInput}\n            message={name + \":   \" + message}\n            setRoom={setRoom}\n            room={room}\n            sendMessage={sendMessage}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(ChatRoom);\n","C:\\Users\\aamir\\mainp\\portp\\src\\sockets\\sockets.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\components\\chat-room-content\\Chat-room-content.js",[],"C:\\Users\\aamir\\mainp\\portp\\src\\modal\\Modal-chatrooms.js",[],["392","393"],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":15,"column":6,"nodeType":"400","endLine":15,"endColumn":8,"suggestions":"401"},{"ruleId":"402","severity":1,"message":"403","line":13,"column":27,"nodeType":"404","messageId":"405","endLine":13,"endColumn":29},{"ruleId":"394","replacedBy":"406"},{"ruleId":"396","replacedBy":"407"},{"ruleId":"394","replacedBy":"408"},{"ruleId":"396","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":365,"column":11,"nodeType":"412","messageId":"413","endLine":365,"endColumn":22},{"ruleId":"414","severity":1,"message":"415","line":31,"column":33,"nodeType":"416","messageId":"417","endLine":31,"endColumn":35},{"ruleId":"410","severity":1,"message":"418","line":5,"column":9,"nodeType":"412","messageId":"413","endLine":5,"endColumn":16},{"ruleId":"410","severity":1,"message":"419","line":6,"column":9,"nodeType":"412","messageId":"413","endLine":6,"endColumn":25},{"ruleId":"394","replacedBy":"420"},{"ruleId":"396","replacedBy":"421"},{"ruleId":"394","replacedBy":"422"},{"ruleId":"396","replacedBy":"423"},{"ruleId":"398","severity":1,"message":"424","line":80,"column":6,"nodeType":"400","endLine":80,"endColumn":22,"suggestions":"425"},{"ruleId":"398","severity":1,"message":"426","line":90,"column":6,"nodeType":"400","endLine":90,"endColumn":52,"suggestions":"427"},{"ruleId":"410","severity":1,"message":"428","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"429","line":24,"column":10,"nodeType":"412","messageId":"413","endLine":24,"endColumn":18},{"ruleId":"410","severity":1,"message":"430","line":2,"column":8,"nodeType":"412","messageId":"413","endLine":2,"endColumn":26},{"ruleId":"398","severity":1,"message":"431","line":12,"column":5,"nodeType":"400","endLine":12,"endColumn":21,"suggestions":"432"},{"ruleId":"410","severity":1,"message":"433","line":25,"column":9,"nodeType":"412","messageId":"413","endLine":25,"endColumn":26},{"ruleId":"398","severity":1,"message":"434","line":47,"column":6,"nodeType":"400","endLine":47,"endColumn":43,"suggestions":"435"},{"ruleId":"398","severity":1,"message":"436","line":17,"column":6,"nodeType":"400","endLine":17,"endColumn":24,"suggestions":"437"},{"ruleId":"398","severity":1,"message":"438","line":24,"column":6,"nodeType":"400","endLine":24,"endColumn":20,"suggestions":"439"},{"ruleId":"410","severity":1,"message":"440","line":18,"column":5,"nodeType":"412","messageId":"413","endLine":18,"endColumn":11},{"ruleId":"398","severity":1,"message":"441","line":39,"column":6,"nodeType":"400","endLine":39,"endColumn":37,"suggestions":"442"},{"ruleId":"398","severity":1,"message":"443","line":41,"column":3,"nodeType":"412","endLine":41,"endColumn":12,"suggestions":"444"},{"ruleId":"394","replacedBy":"445"},{"ruleId":"396","replacedBy":"446"},"no-native-reassign",["447"],"no-negated-in-lhs",["448"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeStatus' and 'currentUser'. Either include them or remove the dependency array. If 'changeStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["449"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["447"],["448"],["447"],["448"],"no-unused-vars","'downloadURL' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'addItem' is defined but never used.","'toggleCartHidden' is defined but never used.",["447"],["448"],["447"],["448"],"React Hook useEffect has a missing dependency: 'fetchProfileName'. Either include it or remove the dependency array. Outer scope values like 'getProfileName' aren't valid dependencies because mutating them doesn't re-render the component.",["450"],"React Hook useEffect has a missing dependency: 'getSentMessages'. Either include it or remove the dependency array. Outer scope values like 'getSentMessageDoc' aren't valid dependencies because mutating them doesn't re-render the component.",["451"],"'useEffect' is defined but never used.","'profiles' is assigned a value but never used.","'DirectMessagingBox' is defined but never used.","React Hook useEffect has missing dependencies: 'data.displayName' and 'data.profileId'. Either include them or remove the dependency array. If 'setProfileInfo' needs the current value of 'data.profileId', you can also switch to useReducer instead of useState and read 'data.profileId' in the reducer.",["452"],"'toggleSendMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'recieverInfo.displayName' and 'recieverInfo.profileId'. Either include them or remove the dependency array. If 'setMessageData' needs the current value of 'recieverInfo.profileId', you can also switch to useReducer instead of useState and read 'recieverInfo.profileId' in the reducer.",["453"],"React Hook useEffect has a missing dependency: 'getRecievedMessages'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'getSentMessages'. Either include it or remove the dependency array.",["455"],"'socket' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchRooms'. Either include it or remove the dependency array.",["456"],"React Hook useEffect contains a call to 'setRoom'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [room, rooms] as a second argument to the useEffect Hook.",["457"],["447"],["448"],"no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},"Update the dependencies array to be: [changeStatus, currentUser]",{"range":"476","text":"477"},"Update the dependencies array to be: [fetchProfileName]",{"range":"478","text":"479"},"Update the dependencies array to be: [currentUser, sentMessages, getSentMessages]",{"range":"480","text":"481"},"Update the dependencies array to be: [data.displayName, data.profileId, setProfileInfo]",{"range":"482","text":"483"},"Update the dependencies array to be: [currentUser, displayName, profileId, recieverInfo.displayName, recieverInfo.profileId]",{"range":"484","text":"485"},"Update the dependencies array to be: [getRecievedMessages, recievedMessages]",{"range":"486","text":"487"},"Update the dependencies array to be: [getSentMessages, sentMessages]",{"range":"488","text":"489"},"Update the dependencies array to be: [currentUser, room, name, onName, fetchRooms]",{"range":"490","text":"491"},"Add dependencies array: [room, rooms]",{"range":"492","text":"493"},[514,516],"[changeStatus, currentUser]",[2452,2468],"[fetchProfileName]",[2699,2745],"[currentUser, sentMessages, getSentMessages]",[536,552],"[data.displayName, data.profileId, setProfileInfo]",[1277,1314],"[currentUser, displayName, profileId, recieverInfo.displayName, recieverInfo.profileId]",[505,523],"[getRecievedMessages, recievedMessages]",[701,715],"[getSentMessages, sentMessages]",[1010,1041],"[currentUser, room, name, onName, fetchRooms]",[1338,1338],", [room, rooms]"]